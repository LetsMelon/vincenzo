<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="710" onload="init(evt)" viewBox="0 0 1200 710" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="710" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="693.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="693.00"> </text><svg id="frames" x="10" width="1180" total_samples="399"><g><title>[[heap]] (1 samples, 0.25%)</title><rect x="0.0000%" y="629" width="0.2506%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="639.50"></text></g><g><title>[libc.so.6] (1 samples, 0.25%)</title><rect x="0.0000%" y="613" width="0.2506%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="1"/><text x="0.2500%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="0.0000%" y="597" width="0.2506%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="1"/><text x="0.2500%" y="607.50"></text></g><g><title>[ld-linux-x86-64.so.2] (2 samples, 0.50%)</title><rect x="0.5013%" y="597" width="0.5013%" height="15" fill="rgb(248,212,6)" fg:x="2" fg:w="2"/><text x="0.7513%" y="607.50"></text></g><g><title>[ld-linux-x86-64.so.2] (2 samples, 0.50%)</title><rect x="0.5013%" y="581" width="0.5013%" height="15" fill="rgb(208,68,35)" fg:x="2" fg:w="2"/><text x="0.7513%" y="591.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.25%)</title><rect x="0.7519%" y="565" width="0.2506%" height="15" fill="rgb(232,128,0)" fg:x="3" fg:w="1"/><text x="1.0019%" y="575.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.25%)</title><rect x="0.7519%" y="549" width="0.2506%" height="15" fill="rgb(207,160,47)" fg:x="3" fg:w="1"/><text x="1.0019%" y="559.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.25%)</title><rect x="0.7519%" y="533" width="0.2506%" height="15" fill="rgb(228,23,34)" fg:x="3" fg:w="1"/><text x="1.0019%" y="543.50"></text></g><g><title>[ld-linux-x86-64.so.2] (5 samples, 1.25%)</title><rect x="0.2506%" y="613" width="1.2531%" height="15" fill="rgb(218,30,26)" fg:x="1" fg:w="5"/><text x="0.5006%" y="623.50"></text></g><g><title>[unknown] (2 samples, 0.50%)</title><rect x="1.0025%" y="597" width="0.5013%" height="15" fill="rgb(220,122,19)" fg:x="4" fg:w="2"/><text x="1.2525%" y="607.50"></text></g><g><title>[unknown] (2 samples, 0.50%)</title><rect x="1.0025%" y="581" width="0.5013%" height="15" fill="rgb(250,228,42)" fg:x="4" fg:w="2"/><text x="1.2525%" y="591.50"></text></g><g><title>[unknown] (2 samples, 0.50%)</title><rect x="1.0025%" y="565" width="0.5013%" height="15" fill="rgb(240,193,28)" fg:x="4" fg:w="2"/><text x="1.2525%" y="575.50"></text></g><g><title>[unknown] (2 samples, 0.50%)</title><rect x="1.0025%" y="549" width="0.5013%" height="15" fill="rgb(216,20,37)" fg:x="4" fg:w="2"/><text x="1.2525%" y="559.50"></text></g><g><title>[unknown] (2 samples, 0.50%)</title><rect x="1.0025%" y="533" width="0.5013%" height="15" fill="rgb(206,188,39)" fg:x="4" fg:w="2"/><text x="1.2525%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="1.2531%" y="517" width="0.2506%" height="15" fill="rgb(217,207,13)" fg:x="5" fg:w="1"/><text x="1.5031%" y="527.50"></text></g><g><title>[ld-linux-x86-64.so.2] (7 samples, 1.75%)</title><rect x="0.2506%" y="629" width="1.7544%" height="15" fill="rgb(231,73,38)" fg:x="1" fg:w="7"/><text x="0.5006%" y="639.50"></text></g><g><title>[unknown] (2 samples, 0.50%)</title><rect x="1.5038%" y="613" width="0.5013%" height="15" fill="rgb(225,20,46)" fg:x="6" fg:w="2"/><text x="1.7538%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="1.7544%" y="597" width="0.2506%" height="15" fill="rgb(210,31,41)" fg:x="7" fg:w="1"/><text x="2.0044%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="1.7544%" y="581" width="0.2506%" height="15" fill="rgb(221,200,47)" fg:x="7" fg:w="1"/><text x="2.0044%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="1.7544%" y="565" width="0.2506%" height="15" fill="rgb(226,26,5)" fg:x="7" fg:w="1"/><text x="2.0044%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="1.7544%" y="549" width="0.2506%" height="15" fill="rgb(249,33,26)" fg:x="7" fg:w="1"/><text x="2.0044%" y="559.50"></text></g><g><title>[unknown] (55 samples, 13.78%)</title><rect x="2.5063%" y="597" width="13.7845%" height="15" fill="rgb(235,183,28)" fg:x="10" fg:w="55"/><text x="2.7563%" y="607.50">[unknown]</text></g><g><title>[unknown] (51 samples, 12.78%)</title><rect x="3.5088%" y="581" width="12.7820%" height="15" fill="rgb(221,5,38)" fg:x="14" fg:w="51"/><text x="3.7588%" y="591.50">[unknown]</text></g><g><title>[unknown] (46 samples, 11.53%)</title><rect x="4.7619%" y="565" width="11.5288%" height="15" fill="rgb(247,18,42)" fg:x="19" fg:w="46"/><text x="5.0119%" y="575.50">[unknown]</text></g><g><title>[unknown] (36 samples, 9.02%)</title><rect x="7.2682%" y="549" width="9.0226%" height="15" fill="rgb(241,131,45)" fg:x="29" fg:w="36"/><text x="7.5182%" y="559.50">[unknown]</text></g><g><title>[unknown] (20 samples, 5.01%)</title><rect x="11.2782%" y="533" width="5.0125%" height="15" fill="rgb(249,31,29)" fg:x="45" fg:w="20"/><text x="11.5282%" y="543.50">[unkno..</text></g><g><title>[unknown] (4 samples, 1.00%)</title><rect x="15.2882%" y="517" width="1.0025%" height="15" fill="rgb(225,111,53)" fg:x="61" fg:w="4"/><text x="15.5382%" y="527.50"></text></g><g><title>__ctype_init (1 samples, 0.25%)</title><rect x="16.2907%" y="597" width="0.2506%" height="15" fill="rgb(238,160,17)" fg:x="65" fg:w="1"/><text x="16.5407%" y="607.50"></text></g><g><title>__sigsetjmp (2 samples, 0.50%)</title><rect x="16.5414%" y="597" width="0.5013%" height="15" fill="rgb(214,148,48)" fg:x="66" fg:w="2"/><text x="16.7914%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="16.7920%" y="581" width="0.2506%" height="15" fill="rgb(232,36,49)" fg:x="67" fg:w="1"/><text x="17.0420%" y="591.50"></text></g><g><title>std::sys::unix::thread::Thread::set_name (3 samples, 0.75%)</title><rect x="18.0451%" y="533" width="0.7519%" height="15" fill="rgb(209,103,24)" fg:x="72" fg:w="3"/><text x="18.2951%" y="543.50"></text></g><g><title>pthread_setname_np (3 samples, 0.75%)</title><rect x="18.0451%" y="517" width="0.7519%" height="15" fill="rgb(229,88,8)" fg:x="72" fg:w="3"/><text x="18.2951%" y="527.50"></text></g><g><title>prctl (3 samples, 0.75%)</title><rect x="18.0451%" y="501" width="0.7519%" height="15" fill="rgb(213,181,19)" fg:x="72" fg:w="3"/><text x="18.2951%" y="511.50"></text></g><g><title>[unknown] (2 samples, 0.50%)</title><rect x="18.2957%" y="485" width="0.5013%" height="15" fill="rgb(254,191,54)" fg:x="73" fg:w="2"/><text x="18.5457%" y="495.50"></text></g><g><title>[unknown] (2 samples, 0.50%)</title><rect x="18.2957%" y="469" width="0.5013%" height="15" fill="rgb(241,83,37)" fg:x="73" fg:w="2"/><text x="18.5457%" y="479.50"></text></g><g><title>[unknown] (2 samples, 0.50%)</title><rect x="18.2957%" y="453" width="0.5013%" height="15" fill="rgb(233,36,39)" fg:x="73" fg:w="2"/><text x="18.5457%" y="463.50"></text></g><g><title>[unknown] (2 samples, 0.50%)</title><rect x="18.2957%" y="437" width="0.5013%" height="15" fill="rgb(226,3,54)" fg:x="73" fg:w="2"/><text x="18.5457%" y="447.50"></text></g><g><title>[unknown] (2 samples, 0.50%)</title><rect x="18.2957%" y="421" width="0.5013%" height="15" fill="rgb(245,192,40)" fg:x="73" fg:w="2"/><text x="18.5457%" y="431.50"></text></g><g><title>&lt;tokio::fs::file::File as tokio::io::async_seek::AsyncSeek&gt;::start_seek (1 samples, 0.25%)</title><rect x="18.7970%" y="453" width="0.2506%" height="15" fill="rgb(238,167,29)" fg:x="75" fg:w="1"/><text x="19.0470%" y="463.50"></text></g><g><title>tokio::runtime::blocking::pool::spawn_blocking (1 samples, 0.25%)</title><rect x="18.7970%" y="437" width="0.2506%" height="15" fill="rgb(232,182,51)" fg:x="75" fg:w="1"/><text x="19.0470%" y="447.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_blocking (1 samples, 0.25%)</title><rect x="18.7970%" y="421" width="0.2506%" height="15" fill="rgb(231,60,39)" fg:x="75" fg:w="1"/><text x="19.0470%" y="431.50"></text></g><g><title>tracing::span::Span::new (1 samples, 0.25%)</title><rect x="18.7970%" y="405" width="0.2506%" height="15" fill="rgb(208,69,12)" fg:x="75" fg:w="1"/><text x="19.0470%" y="415.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (1 samples, 0.25%)</title><rect x="18.7970%" y="389" width="0.2506%" height="15" fill="rgb(235,93,37)" fg:x="75" fg:w="1"/><text x="19.0470%" y="399.50"></text></g><g><title>&lt;console_subscriber::ConsoleLayer as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_new_span (1 samples, 0.25%)</title><rect x="18.7970%" y="373" width="0.2506%" height="15" fill="rgb(213,116,39)" fg:x="75" fg:w="1"/><text x="19.0470%" y="383.50"></text></g><g><title>console_subscriber::stats::TaskStats::new (1 samples, 0.25%)</title><rect x="18.7970%" y="357" width="0.2506%" height="15" fill="rgb(222,207,29)" fg:x="75" fg:w="1"/><text x="19.0470%" y="367.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::new_with_bounds (1 samples, 0.25%)</title><rect x="18.7970%" y="341" width="0.2506%" height="15" fill="rgb(206,96,30)" fg:x="75" fg:w="1"/><text x="19.0470%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.25%)</title><rect x="18.7970%" y="325" width="0.2506%" height="15" fill="rgb(218,138,4)" fg:x="75" fg:w="1"/><text x="19.0470%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.25%)</title><rect x="18.7970%" y="309" width="0.2506%" height="15" fill="rgb(250,191,14)" fg:x="75" fg:w="1"/><text x="19.0470%" y="319.50"></text></g><g><title>malloc (1 samples, 0.25%)</title><rect x="18.7970%" y="293" width="0.2506%" height="15" fill="rgb(239,60,40)" fg:x="75" fg:w="1"/><text x="19.0470%" y="303.50"></text></g><g><title>[libc.so.6] (1 samples, 0.25%)</title><rect x="18.7970%" y="277" width="0.2506%" height="15" fill="rgb(206,27,48)" fg:x="75" fg:w="1"/><text x="19.0470%" y="287.50"></text></g><g><title>[libc.so.6] (1 samples, 0.25%)</title><rect x="18.7970%" y="261" width="0.2506%" height="15" fill="rgb(225,35,8)" fg:x="75" fg:w="1"/><text x="19.0470%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="18.7970%" y="245" width="0.2506%" height="15" fill="rgb(250,213,24)" fg:x="75" fg:w="1"/><text x="19.0470%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="18.7970%" y="229" width="0.2506%" height="15" fill="rgb(247,123,22)" fg:x="75" fg:w="1"/><text x="19.0470%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="18.7970%" y="213" width="0.2506%" height="15" fill="rgb(231,138,38)" fg:x="75" fg:w="1"/><text x="19.0470%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="18.7970%" y="197" width="0.2506%" height="15" fill="rgb(231,145,46)" fg:x="75" fg:w="1"/><text x="19.0470%" y="207.50"></text></g><g><title>tokio::fs::file::File::from_std (1 samples, 0.25%)</title><rect x="19.0476%" y="437" width="0.2506%" height="15" fill="rgb(251,118,11)" fg:x="76" fg:w="1"/><text x="19.2976%" y="447.50"></text></g><g><title>tokio::sync::mutex::Mutex&lt;T&gt;::new (1 samples, 0.25%)</title><rect x="19.0476%" y="421" width="0.2506%" height="15" fill="rgb(217,147,25)" fg:x="76" fg:w="1"/><text x="19.2976%" y="431.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::enter (1 samples, 0.25%)</title><rect x="19.0476%" y="405" width="0.2506%" height="15" fill="rgb(247,81,37)" fg:x="76" fg:w="1"/><text x="19.2976%" y="415.50"></text></g><g><title>&lt;console_subscriber::ConsoleLayer as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_enter (1 samples, 0.25%)</title><rect x="19.0476%" y="389" width="0.2506%" height="15" fill="rgb(209,12,38)" fg:x="76" fg:w="1"/><text x="19.2976%" y="399.50"></text></g><g><title>&lt;console_subscriber::ConsoleLayer as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_enter::update (1 samples, 0.25%)</title><rect x="19.0476%" y="373" width="0.2506%" height="15" fill="rgb(227,1,9)" fg:x="76" fg:w="1"/><text x="19.2976%" y="383.50"></text></g><g><title>&lt;T as core::any::Any&gt;::type_id (1 samples, 0.25%)</title><rect x="19.0476%" y="357" width="0.2506%" height="15" fill="rgb(248,47,43)" fg:x="76" fg:w="1"/><text x="19.2976%" y="367.50"></text></g><g><title>console_subscriber::stats::TaskStats::new (1 samples, 0.25%)</title><rect x="19.2982%" y="357" width="0.2506%" height="15" fill="rgb(221,10,30)" fg:x="77" fg:w="1"/><text x="19.5482%" y="367.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::new_with_bounds (1 samples, 0.25%)</title><rect x="19.2982%" y="341" width="0.2506%" height="15" fill="rgb(210,229,1)" fg:x="77" fg:w="1"/><text x="19.5482%" y="351.50"></text></g><g><title>[libm.so.6] (1 samples, 0.25%)</title><rect x="19.2982%" y="325" width="0.2506%" height="15" fill="rgb(222,148,37)" fg:x="77" fg:w="1"/><text x="19.5482%" y="335.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::MultiThread::block_on (4 samples, 1.00%)</title><rect x="18.7970%" y="501" width="1.0025%" height="15" fill="rgb(234,67,33)" fg:x="75" fg:w="4"/><text x="19.0470%" y="511.50"></text></g><g><title>tokio::runtime::park::CachedParkThread::block_on (4 samples, 1.00%)</title><rect x="18.7970%" y="485" width="1.0025%" height="15" fill="rgb(247,98,35)" fg:x="75" fg:w="4"/><text x="19.0470%" y="495.50"></text></g><g><title>&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (4 samples, 1.00%)</title><rect x="18.7970%" y="469" width="1.0025%" height="15" fill="rgb(247,138,52)" fg:x="75" fg:w="4"/><text x="19.0470%" y="479.50"></text></g><g><title>bittorrent_rust::disk::Disk::open_file::{{closure}} (3 samples, 0.75%)</title><rect x="19.0476%" y="453" width="0.7519%" height="15" fill="rgb(213,79,30)" fg:x="76" fg:w="3"/><text x="19.2976%" y="463.50"></text></g><g><title>tokio::runtime::blocking::pool::spawn_blocking (2 samples, 0.50%)</title><rect x="19.2982%" y="437" width="0.5013%" height="15" fill="rgb(246,177,23)" fg:x="77" fg:w="2"/><text x="19.5482%" y="447.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_blocking (2 samples, 0.50%)</title><rect x="19.2982%" y="421" width="0.5013%" height="15" fill="rgb(230,62,27)" fg:x="77" fg:w="2"/><text x="19.5482%" y="431.50"></text></g><g><title>tracing::span::Span::new (2 samples, 0.50%)</title><rect x="19.2982%" y="405" width="0.5013%" height="15" fill="rgb(216,154,8)" fg:x="77" fg:w="2"/><text x="19.5482%" y="415.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (2 samples, 0.50%)</title><rect x="19.2982%" y="389" width="0.5013%" height="15" fill="rgb(244,35,45)" fg:x="77" fg:w="2"/><text x="19.5482%" y="399.50"></text></g><g><title>&lt;console_subscriber::ConsoleLayer as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_new_span (2 samples, 0.50%)</title><rect x="19.2982%" y="373" width="0.5013%" height="15" fill="rgb(251,115,12)" fg:x="77" fg:w="2"/><text x="19.5482%" y="383.50"></text></g><g><title>tracing_core::span::Attributes::record (1 samples, 0.25%)</title><rect x="19.5489%" y="357" width="0.2506%" height="15" fill="rgb(240,54,50)" fg:x="78" fg:w="1"/><text x="19.7989%" y="367.50"></text></g><g><title>&lt;&amp;T as tracing_core::field::Value&gt;::record (1 samples, 0.25%)</title><rect x="19.5489%" y="341" width="0.2506%" height="15" fill="rgb(233,84,52)" fg:x="78" fg:w="1"/><text x="19.7989%" y="351.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (10 samples, 2.51%)</title><rect x="17.5439%" y="549" width="2.5063%" height="15" fill="rgb(207,117,47)" fg:x="70" fg:w="10"/><text x="17.7939%" y="559.50">co..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (5 samples, 1.25%)</title><rect x="18.7970%" y="533" width="1.2531%" height="15" fill="rgb(249,43,39)" fg:x="75" fg:w="5"/><text x="19.0470%" y="543.50"></text></g><g><title>tokio::runtime::runtime::Runtime::block_on (5 samples, 1.25%)</title><rect x="18.7970%" y="517" width="1.2531%" height="15" fill="rgb(209,38,44)" fg:x="75" fg:w="5"/><text x="19.0470%" y="527.50"></text></g><g><title>tracing::span::Span::new (1 samples, 0.25%)</title><rect x="19.7995%" y="501" width="0.2506%" height="15" fill="rgb(236,212,23)" fg:x="79" fg:w="1"/><text x="20.0495%" y="511.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (1 samples, 0.25%)</title><rect x="19.7995%" y="485" width="0.2506%" height="15" fill="rgb(242,79,21)" fg:x="79" fg:w="1"/><text x="20.0495%" y="495.50"></text></g><g><title>&lt;console_subscriber::ConsoleLayer as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_new_span (1 samples, 0.25%)</title><rect x="19.7995%" y="469" width="0.2506%" height="15" fill="rgb(211,96,35)" fg:x="79" fg:w="1"/><text x="20.0495%" y="479.50"></text></g><g><title>console_subscriber::stats::TaskStats::new (1 samples, 0.25%)</title><rect x="19.7995%" y="453" width="0.2506%" height="15" fill="rgb(253,215,40)" fg:x="79" fg:w="1"/><text x="20.0495%" y="463.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::new_with_bounds (1 samples, 0.25%)</title><rect x="19.7995%" y="437" width="0.2506%" height="15" fill="rgb(211,81,21)" fg:x="79" fg:w="1"/><text x="20.0495%" y="447.50"></text></g><g><title>[libc.so.6] (1 samples, 0.25%)</title><rect x="19.7995%" y="421" width="0.2506%" height="15" fill="rgb(208,190,38)" fg:x="79" fg:w="1"/><text x="20.0495%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="19.7995%" y="405" width="0.2506%" height="15" fill="rgb(235,213,38)" fg:x="79" fg:w="1"/><text x="20.0495%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="19.7995%" y="389" width="0.2506%" height="15" fill="rgb(237,122,38)" fg:x="79" fg:w="1"/><text x="20.0495%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="19.7995%" y="373" width="0.2506%" height="15" fill="rgb(244,218,35)" fg:x="79" fg:w="1"/><text x="20.0495%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="19.7995%" y="357" width="0.2506%" height="15" fill="rgb(240,68,47)" fg:x="79" fg:w="1"/><text x="20.0495%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="19.7995%" y="341" width="0.2506%" height="15" fill="rgb(210,16,53)" fg:x="79" fg:w="1"/><text x="20.0495%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="19.7995%" y="325" width="0.2506%" height="15" fill="rgb(235,124,12)" fg:x="79" fg:w="1"/><text x="20.0495%" y="335.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (12 samples, 3.01%)</title><rect x="17.2932%" y="581" width="3.0075%" height="15" fill="rgb(224,169,11)" fg:x="69" fg:w="12"/><text x="17.5432%" y="591.50">&lt;al..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (11 samples, 2.76%)</title><rect x="17.5439%" y="565" width="2.7569%" height="15" fill="rgb(250,166,2)" fg:x="70" fg:w="11"/><text x="17.7939%" y="575.50">&lt;a..</text></g><g><title>std::sys::unix::stack_overflow::imp::make_handler (1 samples, 0.25%)</title><rect x="20.0501%" y="549" width="0.2506%" height="15" fill="rgb(242,216,29)" fg:x="80" fg:w="1"/><text x="20.3001%" y="559.50"></text></g><g><title>sigaltstack (1 samples, 0.25%)</title><rect x="20.0501%" y="533" width="0.2506%" height="15" fill="rgb(230,116,27)" fg:x="80" fg:w="1"/><text x="20.3001%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="20.0501%" y="517" width="0.2506%" height="15" fill="rgb(228,99,48)" fg:x="80" fg:w="1"/><text x="20.3001%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (1 samples, 0.25%)</title><rect x="20.3008%" y="549" width="0.2506%" height="15" fill="rgb(253,11,6)" fg:x="81" fg:w="1"/><text x="20.5508%" y="559.50"></text></g><g><title>sigaltstack (21 samples, 5.26%)</title><rect x="20.5514%" y="549" width="5.2632%" height="15" fill="rgb(247,143,39)" fg:x="82" fg:w="21"/><text x="20.8014%" y="559.50">sigalt..</text></g><g><title>[unknown] (20 samples, 5.01%)</title><rect x="20.8020%" y="533" width="5.0125%" height="15" fill="rgb(236,97,10)" fg:x="83" fg:w="20"/><text x="21.0520%" y="543.50">[unkno..</text></g><g><title>[unknown] (20 samples, 5.01%)</title><rect x="20.8020%" y="517" width="5.0125%" height="15" fill="rgb(233,208,19)" fg:x="83" fg:w="20"/><text x="21.0520%" y="527.50">[unkno..</text></g><g><title>[unknown] (20 samples, 5.01%)</title><rect x="20.8020%" y="501" width="5.0125%" height="15" fill="rgb(216,164,2)" fg:x="83" fg:w="20"/><text x="21.0520%" y="511.50">[unkno..</text></g><g><title>[unknown] (15 samples, 3.76%)</title><rect x="22.0551%" y="485" width="3.7594%" height="15" fill="rgb(220,129,5)" fg:x="88" fg:w="15"/><text x="22.3051%" y="495.50">[unk..</text></g><g><title>[unknown] (3 samples, 0.75%)</title><rect x="25.0627%" y="469" width="0.7519%" height="15" fill="rgb(242,17,10)" fg:x="100" fg:w="3"/><text x="25.3127%" y="479.50"></text></g><g><title>__mmap (24 samples, 6.02%)</title><rect x="25.8145%" y="517" width="6.0150%" height="15" fill="rgb(242,107,0)" fg:x="103" fg:w="24"/><text x="26.0645%" y="527.50">__mmap</text></g><g><title>[unknown] (24 samples, 6.02%)</title><rect x="25.8145%" y="501" width="6.0150%" height="15" fill="rgb(251,28,31)" fg:x="103" fg:w="24"/><text x="26.0645%" y="511.50">[unknown]</text></g><g><title>[unknown] (24 samples, 6.02%)</title><rect x="25.8145%" y="485" width="6.0150%" height="15" fill="rgb(233,223,10)" fg:x="103" fg:w="24"/><text x="26.0645%" y="495.50">[unknown]</text></g><g><title>[unknown] (24 samples, 6.02%)</title><rect x="25.8145%" y="469" width="6.0150%" height="15" fill="rgb(215,21,27)" fg:x="103" fg:w="24"/><text x="26.0645%" y="479.50">[unknown]</text></g><g><title>[unknown] (15 samples, 3.76%)</title><rect x="28.0702%" y="453" width="3.7594%" height="15" fill="rgb(232,23,21)" fg:x="112" fg:w="15"/><text x="28.3202%" y="463.50">[unk..</text></g><g><title>[unknown] (6 samples, 1.50%)</title><rect x="30.3258%" y="437" width="1.5038%" height="15" fill="rgb(244,5,23)" fg:x="121" fg:w="6"/><text x="30.5758%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="31.5789%" y="421" width="0.2506%" height="15" fill="rgb(226,81,46)" fg:x="126" fg:w="1"/><text x="31.8289%" y="431.50"></text></g><g><title>__mprotect (2 samples, 0.50%)</title><rect x="31.8296%" y="517" width="0.5013%" height="15" fill="rgb(247,70,30)" fg:x="127" fg:w="2"/><text x="32.0796%" y="527.50"></text></g><g><title>[unknown] (2 samples, 0.50%)</title><rect x="31.8296%" y="501" width="0.5013%" height="15" fill="rgb(212,68,19)" fg:x="127" fg:w="2"/><text x="32.0796%" y="511.50"></text></g><g><title>[unknown] (2 samples, 0.50%)</title><rect x="31.8296%" y="485" width="0.5013%" height="15" fill="rgb(240,187,13)" fg:x="127" fg:w="2"/><text x="32.0796%" y="495.50"></text></g><g><title>[unknown] (2 samples, 0.50%)</title><rect x="31.8296%" y="469" width="0.5013%" height="15" fill="rgb(223,113,26)" fg:x="127" fg:w="2"/><text x="32.0796%" y="479.50"></text></g><g><title>[unknown] (2 samples, 0.50%)</title><rect x="31.8296%" y="453" width="0.5013%" height="15" fill="rgb(206,192,2)" fg:x="127" fg:w="2"/><text x="32.0796%" y="463.50"></text></g><g><title>[unknown] (2 samples, 0.50%)</title><rect x="31.8296%" y="437" width="0.5013%" height="15" fill="rgb(241,108,4)" fg:x="127" fg:w="2"/><text x="32.0796%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="32.0802%" y="421" width="0.2506%" height="15" fill="rgb(247,173,49)" fg:x="128" fg:w="1"/><text x="32.3302%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="32.0802%" y="405" width="0.2506%" height="15" fill="rgb(224,114,35)" fg:x="128" fg:w="1"/><text x="32.3302%" y="415.50"></text></g><g><title>sigaltstack (1 samples, 0.25%)</title><rect x="32.3308%" y="517" width="0.2506%" height="15" fill="rgb(245,159,27)" fg:x="129" fg:w="1"/><text x="32.5808%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="32.3308%" y="501" width="0.2506%" height="15" fill="rgb(245,172,44)" fg:x="129" fg:w="1"/><text x="32.5808%" y="511.50"></text></g><g><title>[libc.so.6] (125 samples, 31.33%)</title><rect x="2.0050%" y="613" width="31.3283%" height="15" fill="rgb(236,23,11)" fg:x="8" fg:w="125"/><text x="2.2550%" y="623.50">[libc.so.6]</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (65 samples, 16.29%)</title><rect x="17.0426%" y="597" width="16.2907%" height="15" fill="rgb(205,117,38)" fg:x="68" fg:w="65"/><text x="17.2926%" y="607.50">std::sys::unix::thread::T..</text></g><g><title>std::sys::unix::stack_overflow::Handler::new (52 samples, 13.03%)</title><rect x="20.3008%" y="581" width="13.0326%" height="15" fill="rgb(237,72,25)" fg:x="81" fg:w="52"/><text x="20.5508%" y="591.50">std::sys::unix::stac..</text></g><g><title>std::sys::unix::stack_overflow::imp::make_handler (52 samples, 13.03%)</title><rect x="20.3008%" y="565" width="13.0326%" height="15" fill="rgb(244,70,9)" fg:x="81" fg:w="52"/><text x="20.5508%" y="575.50">std::sys::unix::stac..</text></g><g><title>std::sys::unix::stack_overflow::imp::get_stack (30 samples, 7.52%)</title><rect x="25.8145%" y="549" width="7.5188%" height="15" fill="rgb(217,125,39)" fg:x="103" fg:w="30"/><text x="26.0645%" y="559.50">std::sys::..</text></g><g><title>std::sys::unix::stack_overflow::imp::get_stackp (30 samples, 7.52%)</title><rect x="25.8145%" y="533" width="7.5188%" height="15" fill="rgb(235,36,10)" fg:x="103" fg:w="30"/><text x="26.0645%" y="543.50">std::sys::..</text></g><g><title>std::sys::unix::os::page_size (3 samples, 0.75%)</title><rect x="32.5815%" y="517" width="0.7519%" height="15" fill="rgb(251,123,47)" fg:x="130" fg:w="3"/><text x="32.8315%" y="527.50"></text></g><g><title>__sysconf (3 samples, 0.75%)</title><rect x="32.5815%" y="501" width="0.7519%" height="15" fill="rgb(221,13,13)" fg:x="130" fg:w="3"/><text x="32.8315%" y="511.50"></text></g><g><title>[libc.so.6] (126 samples, 31.58%)</title><rect x="2.0050%" y="629" width="31.5789%" height="15" fill="rgb(238,131,9)" fg:x="8" fg:w="126"/><text x="2.2550%" y="639.50">[libc.so.6]</text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="33.3333%" y="613" width="0.2506%" height="15" fill="rgb(211,50,8)" fg:x="133" fg:w="1"/><text x="33.5833%" y="623.50"></text></g><g><title>console_subscriber::stats::TaskStats::new (7 samples, 1.75%)</title><rect x="38.3459%" y="469" width="1.7544%" height="15" fill="rgb(245,182,24)" fg:x="153" fg:w="7"/><text x="38.5959%" y="479.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::new_with_bounds (7 samples, 1.75%)</title><rect x="38.3459%" y="453" width="1.7544%" height="15" fill="rgb(242,14,37)" fg:x="153" fg:w="7"/><text x="38.5959%" y="463.50"></text></g><g><title>[libc.so.6] (7 samples, 1.75%)</title><rect x="38.3459%" y="437" width="1.7544%" height="15" fill="rgb(246,228,12)" fg:x="153" fg:w="7"/><text x="38.5959%" y="447.50"></text></g><g><title>[unknown] (6 samples, 1.50%)</title><rect x="38.5965%" y="421" width="1.5038%" height="15" fill="rgb(213,55,15)" fg:x="154" fg:w="6"/><text x="38.8465%" y="431.50"></text></g><g><title>[unknown] (2 samples, 0.50%)</title><rect x="39.5990%" y="405" width="0.5013%" height="15" fill="rgb(209,9,3)" fg:x="158" fg:w="2"/><text x="39.8490%" y="415.50"></text></g><g><title>[unknown] (2 samples, 0.50%)</title><rect x="39.5990%" y="389" width="0.5013%" height="15" fill="rgb(230,59,30)" fg:x="158" fg:w="2"/><text x="39.8490%" y="399.50"></text></g><g><title>[unknown] (2 samples, 0.50%)</title><rect x="39.5990%" y="373" width="0.5013%" height="15" fill="rgb(209,121,21)" fg:x="158" fg:w="2"/><text x="39.8490%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="39.8496%" y="357" width="0.2506%" height="15" fill="rgb(220,109,13)" fg:x="159" fg:w="1"/><text x="40.0996%" y="367.50"></text></g><g><title>&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (8 samples, 2.01%)</title><rect x="38.3459%" y="613" width="2.0050%" height="15" fill="rgb(232,18,1)" fg:x="153" fg:w="8"/><text x="38.5959%" y="623.50">&lt;..</text></g><g><title>tokio::runtime::runtime::Runtime::new (8 samples, 2.01%)</title><rect x="38.3459%" y="597" width="2.0050%" height="15" fill="rgb(215,41,42)" fg:x="153" fg:w="8"/><text x="38.5959%" y="607.50">t..</text></g><g><title>tokio::runtime::builder::Builder::build (8 samples, 2.01%)</title><rect x="38.3459%" y="581" width="2.0050%" height="15" fill="rgb(224,123,36)" fg:x="153" fg:w="8"/><text x="38.5959%" y="591.50">t..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Launch::launch (8 samples, 2.01%)</title><rect x="38.3459%" y="565" width="2.0050%" height="15" fill="rgb(240,125,3)" fg:x="153" fg:w="8"/><text x="38.5959%" y="575.50">t..</text></g><g><title>tokio::runtime::blocking::pool::spawn_blocking (8 samples, 2.01%)</title><rect x="38.3459%" y="549" width="2.0050%" height="15" fill="rgb(205,98,50)" fg:x="153" fg:w="8"/><text x="38.5959%" y="559.50">t..</text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_blocking (8 samples, 2.01%)</title><rect x="38.3459%" y="533" width="2.0050%" height="15" fill="rgb(205,185,37)" fg:x="153" fg:w="8"/><text x="38.5959%" y="543.50">t..</text></g><g><title>tracing::span::Span::new (8 samples, 2.01%)</title><rect x="38.3459%" y="517" width="2.0050%" height="15" fill="rgb(238,207,15)" fg:x="153" fg:w="8"/><text x="38.5959%" y="527.50">t..</text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (8 samples, 2.01%)</title><rect x="38.3459%" y="501" width="2.0050%" height="15" fill="rgb(213,199,42)" fg:x="153" fg:w="8"/><text x="38.5959%" y="511.50">&lt;..</text></g><g><title>&lt;console_subscriber::ConsoleLayer as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_new_span (8 samples, 2.01%)</title><rect x="38.3459%" y="485" width="2.0050%" height="15" fill="rgb(235,201,11)" fg:x="153" fg:w="8"/><text x="38.5959%" y="495.50">&lt;..</text></g><g><title>console_subscriber::visitors::TaskVisitor::result (1 samples, 0.25%)</title><rect x="40.1003%" y="469" width="0.2506%" height="15" fill="rgb(207,46,11)" fg:x="160" fg:w="1"/><text x="40.3503%" y="479.50"></text></g><g><title>[unknown] (11 samples, 2.76%)</title><rect x="40.3509%" y="613" width="2.7569%" height="15" fill="rgb(241,35,35)" fg:x="161" fg:w="11"/><text x="40.6009%" y="623.50">[u..</text></g><g><title>[unknown] (6 samples, 1.50%)</title><rect x="41.6040%" y="597" width="1.5038%" height="15" fill="rgb(243,32,47)" fg:x="166" fg:w="6"/><text x="41.8540%" y="607.50"></text></g><g><title>[unknown] (4 samples, 1.00%)</title><rect x="42.1053%" y="581" width="1.0025%" height="15" fill="rgb(247,202,23)" fg:x="168" fg:w="4"/><text x="42.3553%" y="591.50"></text></g><g><title>[unknown] (2 samples, 0.50%)</title><rect x="42.6065%" y="565" width="0.5013%" height="15" fill="rgb(219,102,11)" fg:x="170" fg:w="2"/><text x="42.8565%" y="575.50"></text></g><g><title>[unknown] (2 samples, 0.50%)</title><rect x="42.6065%" y="549" width="0.5013%" height="15" fill="rgb(243,110,44)" fg:x="170" fg:w="2"/><text x="42.8565%" y="559.50"></text></g><g><title>magnet_url::Magnet::new_no_validation (1 samples, 0.25%)</title><rect x="43.1078%" y="613" width="0.2506%" height="15" fill="rgb(222,74,54)" fg:x="172" fg:w="1"/><text x="43.3578%" y="623.50"></text></g><g><title>std::sys_common::once::futex::Once::call (1 samples, 0.25%)</title><rect x="43.1078%" y="597" width="0.2506%" height="15" fill="rgb(216,99,12)" fg:x="172" fg:w="1"/><text x="43.3578%" y="607.50"></text></g><g><title>regex::re_unicode::Regex::new (1 samples, 0.25%)</title><rect x="43.1078%" y="581" width="0.2506%" height="15" fill="rgb(226,22,26)" fg:x="172" fg:w="1"/><text x="43.3578%" y="591.50"></text></g><g><title>regex::exec::ExecBuilder::build (1 samples, 0.25%)</title><rect x="43.1078%" y="565" width="0.2506%" height="15" fill="rgb(217,163,10)" fg:x="172" fg:w="1"/><text x="43.3578%" y="575.50"></text></g><g><title>regex::compile::Compiler::compile (1 samples, 0.25%)</title><rect x="43.1078%" y="549" width="0.2506%" height="15" fill="rgb(213,25,53)" fg:x="172" fg:w="1"/><text x="43.3578%" y="559.50"></text></g><g><title>regex::compile::Compiler::compile_finish (1 samples, 0.25%)</title><rect x="43.1078%" y="533" width="0.2506%" height="15" fill="rgb(252,105,26)" fg:x="172" fg:w="1"/><text x="43.3578%" y="543.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.25%)</title><rect x="43.1078%" y="517" width="0.2506%" height="15" fill="rgb(220,39,43)" fg:x="172" fg:w="1"/><text x="43.3578%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.25%)</title><rect x="43.1078%" y="501" width="0.2506%" height="15" fill="rgb(229,68,48)" fg:x="172" fg:w="1"/><text x="43.3578%" y="511.50"></text></g><g><title>bittorrent-rust (174 samples, 43.61%)</title><rect x="0.0000%" y="645" width="43.6090%" height="15" fill="rgb(252,8,32)" fg:x="0" fg:w="174"/><text x="0.2500%" y="655.50">bittorrent-rust</text></g><g><title>[unknown] (40 samples, 10.03%)</title><rect x="33.5840%" y="629" width="10.0251%" height="15" fill="rgb(223,20,43)" fg:x="134" fg:w="40"/><text x="33.8340%" y="639.50">[unknown]</text></g><g><title>regex::exec::ExecBuilder::build (1 samples, 0.25%)</title><rect x="43.3584%" y="613" width="0.2506%" height="15" fill="rgb(229,81,49)" fg:x="173" fg:w="1"/><text x="43.6084%" y="623.50"></text></g><g><title>regex::compile::Compiler::compile (1 samples, 0.25%)</title><rect x="43.3584%" y="597" width="0.2506%" height="15" fill="rgb(236,28,36)" fg:x="173" fg:w="1"/><text x="43.6084%" y="607.50"></text></g><g><title>regex::compile::Compiler::c (1 samples, 0.25%)</title><rect x="43.3584%" y="581" width="0.2506%" height="15" fill="rgb(249,185,26)" fg:x="173" fg:w="1"/><text x="43.6084%" y="591.50"></text></g><g><title>regex::compile::Compiler::c (1 samples, 0.25%)</title><rect x="43.3584%" y="565" width="0.2506%" height="15" fill="rgb(249,174,33)" fg:x="173" fg:w="1"/><text x="43.6084%" y="575.50"></text></g><g><title>regex::compile::Compiler::c (1 samples, 0.25%)</title><rect x="43.3584%" y="549" width="0.2506%" height="15" fill="rgb(233,201,37)" fg:x="173" fg:w="1"/><text x="43.6084%" y="559.50"></text></g><g><title>regex::compile::Compiler::c (1 samples, 0.25%)</title><rect x="43.3584%" y="533" width="0.2506%" height="15" fill="rgb(221,78,26)" fg:x="173" fg:w="1"/><text x="43.6084%" y="543.50"></text></g><g><title>regex::compile::Compiler::c_concat (1 samples, 0.25%)</title><rect x="43.3584%" y="517" width="0.2506%" height="15" fill="rgb(250,127,30)" fg:x="173" fg:w="1"/><text x="43.6084%" y="527.50"></text></g><g><title>regex::compile::Compiler::c (1 samples, 0.25%)</title><rect x="43.3584%" y="501" width="0.2506%" height="15" fill="rgb(230,49,44)" fg:x="173" fg:w="1"/><text x="43.6084%" y="511.50"></text></g><g><title>regex::compile::Compiler::c (1 samples, 0.25%)</title><rect x="43.3584%" y="485" width="0.2506%" height="15" fill="rgb(229,67,23)" fg:x="173" fg:w="1"/><text x="43.6084%" y="495.50"></text></g><g><title>regex::compile::Compiler::c_repeat_one_or_more (1 samples, 0.25%)</title><rect x="43.3584%" y="469" width="0.2506%" height="15" fill="rgb(249,83,47)" fg:x="173" fg:w="1"/><text x="43.6084%" y="479.50"></text></g><g><title>regex::compile::Compiler::c_class (1 samples, 0.25%)</title><rect x="43.3584%" y="453" width="0.2506%" height="15" fill="rgb(215,43,3)" fg:x="173" fg:w="1"/><text x="43.6084%" y="463.50"></text></g><g><title>regex::compile::Compiler::fill (1 samples, 0.25%)</title><rect x="43.3584%" y="437" width="0.2506%" height="15" fill="rgb(238,154,13)" fg:x="173" fg:w="1"/><text x="43.6084%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="43.6090%" y="613" width="0.2506%" height="15" fill="rgb(219,56,2)" fg:x="174" fg:w="1"/><text x="43.8590%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="43.6090%" y="597" width="0.2506%" height="15" fill="rgb(233,0,4)" fg:x="174" fg:w="1"/><text x="43.8590%" y="607.50"></text></g><g><title>console_subscriber::aggregator::Aggregator::update_state (1 samples, 0.25%)</title><rect x="43.8596%" y="501" width="0.2506%" height="15" fill="rgb(235,30,7)" fg:x="175" fg:w="1"/><text x="44.1096%" y="511.50"></text></g><g><title>console_api::common::&lt;impl core::convert::From&lt;&amp;tracing_core::metadata::Metadata&gt; for console_api::common::generated::register_metadata::NewMetadata&gt;::from (1 samples, 0.25%)</title><rect x="43.8596%" y="485" width="0.2506%" height="15" fill="rgb(250,79,13)" fg:x="175" fg:w="1"/><text x="44.1096%" y="495.50"></text></g><g><title>console_api::common::&lt;impl core::convert::From&lt;&amp;tracing_core::metadata::Metadata&gt; for console_api::common::generated::Metadata&gt;::from (1 samples, 0.25%)</title><rect x="43.8596%" y="469" width="0.2506%" height="15" fill="rgb(211,146,34)" fg:x="175" fg:w="1"/><text x="44.1096%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.25%)</title><rect x="43.8596%" y="453" width="0.2506%" height="15" fill="rgb(228,22,38)" fg:x="175" fg:w="1"/><text x="44.1096%" y="463.50"></text></g><g><title>malloc (1 samples, 0.25%)</title><rect x="43.8596%" y="437" width="0.2506%" height="15" fill="rgb(235,168,5)" fg:x="175" fg:w="1"/><text x="44.1096%" y="447.50"></text></g><g><title>console_subscri (4 samples, 1.00%)</title><rect x="43.6090%" y="645" width="1.0025%" height="15" fill="rgb(221,155,16)" fg:x="174" fg:w="4"/><text x="43.8590%" y="655.50"></text></g><g><title>[unknown] (4 samples, 1.00%)</title><rect x="43.6090%" y="629" width="1.0025%" height="15" fill="rgb(215,215,53)" fg:x="174" fg:w="4"/><text x="43.8590%" y="639.50"></text></g><g><title>tokio::runtime::runtime::Runtime::block_on (3 samples, 0.75%)</title><rect x="43.8596%" y="613" width="0.7519%" height="15" fill="rgb(223,4,10)" fg:x="175" fg:w="3"/><text x="44.1096%" y="623.50"></text></g><g><title>tokio::runtime::scheduler::current_thread::CurrentThread::block_on (3 samples, 0.75%)</title><rect x="43.8596%" y="597" width="0.7519%" height="15" fill="rgb(234,103,6)" fg:x="175" fg:w="3"/><text x="44.1096%" y="607.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (3 samples, 0.75%)</title><rect x="43.8596%" y="581" width="0.7519%" height="15" fill="rgb(227,97,0)" fg:x="175" fg:w="3"/><text x="44.1096%" y="591.50"></text></g><g><title>tokio::runtime::scheduler::current_thread::Context::run_task (3 samples, 0.75%)</title><rect x="43.8596%" y="565" width="0.7519%" height="15" fill="rgb(234,150,53)" fg:x="175" fg:w="3"/><text x="44.1096%" y="575.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (3 samples, 0.75%)</title><rect x="43.8596%" y="549" width="0.7519%" height="15" fill="rgb(228,201,54)" fg:x="175" fg:w="3"/><text x="44.1096%" y="559.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (3 samples, 0.75%)</title><rect x="43.8596%" y="533" width="0.7519%" height="15" fill="rgb(222,22,37)" fg:x="175" fg:w="3"/><text x="44.1096%" y="543.50"></text></g><g><title>&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (3 samples, 0.75%)</title><rect x="43.8596%" y="517" width="0.7519%" height="15" fill="rgb(237,53,32)" fg:x="175" fg:w="3"/><text x="44.1096%" y="527.50"></text></g><g><title>console_subscriber::aggregator::id_data::IdData&lt;T&gt;::drop_closed (2 samples, 0.50%)</title><rect x="44.1103%" y="501" width="0.5013%" height="15" fill="rgb(233,25,53)" fg:x="176" fg:w="2"/><text x="44.3603%" y="511.50"></text></g><g><title>console_subscriber::aggregator::shrink::ShrinkMap&lt;K,V,S&gt;::retain_and_shrink (2 samples, 0.50%)</title><rect x="44.1103%" y="485" width="0.5013%" height="15" fill="rgb(210,40,34)" fg:x="176" fg:w="2"/><text x="44.3603%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::retain (2 samples, 0.50%)</title><rect x="44.1103%" y="469" width="0.5013%" height="15" fill="rgb(241,220,44)" fg:x="176" fg:w="2"/><text x="44.3603%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.25%)</title><rect x="44.3609%" y="453" width="0.2506%" height="15" fill="rgb(235,28,35)" fg:x="177" fg:w="1"/><text x="44.6109%" y="463.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.25%)</title><rect x="44.3609%" y="437" width="0.2506%" height="15" fill="rgb(210,56,17)" fg:x="177" fg:w="1"/><text x="44.6109%" y="447.50"></text></g><g><title>[[heap]] (1 samples, 0.25%)</title><rect x="44.6115%" y="629" width="0.2506%" height="15" fill="rgb(224,130,29)" fg:x="178" fg:w="1"/><text x="44.8615%" y="639.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Parker::park (1 samples, 0.25%)</title><rect x="44.6115%" y="613" width="0.2506%" height="15" fill="rgb(235,212,8)" fg:x="178" fg:w="1"/><text x="44.8615%" y="623.50"></text></g><g><title>std::sys::unix::locks::futex_condvar::Condvar::wait (1 samples, 0.25%)</title><rect x="44.6115%" y="597" width="0.2506%" height="15" fill="rgb(223,33,50)" fg:x="178" fg:w="1"/><text x="44.8615%" y="607.50"></text></g><g><title>std::sys::unix::locks::futex_condvar::Condvar::wait_optional_timeout (1 samples, 0.25%)</title><rect x="44.6115%" y="581" width="0.2506%" height="15" fill="rgb(219,149,13)" fg:x="178" fg:w="1"/><text x="44.8615%" y="591.50"></text></g><g><title>std::sys::unix::futex::futex_wait (1 samples, 0.25%)</title><rect x="44.6115%" y="565" width="0.2506%" height="15" fill="rgb(250,156,29)" fg:x="178" fg:w="1"/><text x="44.8615%" y="575.50"></text></g><g><title>syscall (1 samples, 0.25%)</title><rect x="44.6115%" y="549" width="0.2506%" height="15" fill="rgb(216,193,19)" fg:x="178" fg:w="1"/><text x="44.8615%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="44.6115%" y="533" width="0.2506%" height="15" fill="rgb(216,135,14)" fg:x="178" fg:w="1"/><text x="44.8615%" y="543.50"></text></g><g><title>[unknown] (8 samples, 2.01%)</title><rect x="44.8622%" y="597" width="2.0050%" height="15" fill="rgb(241,47,5)" fg:x="179" fg:w="8"/><text x="45.1122%" y="607.50">[..</text></g><g><title>[unknown] (5 samples, 1.25%)</title><rect x="45.6140%" y="581" width="1.2531%" height="15" fill="rgb(233,42,35)" fg:x="182" fg:w="5"/><text x="45.8640%" y="591.50"></text></g><g><title>[unknown] (5 samples, 1.25%)</title><rect x="45.6140%" y="565" width="1.2531%" height="15" fill="rgb(231,13,6)" fg:x="182" fg:w="5"/><text x="45.8640%" y="575.50"></text></g><g><title>[unknown] (3 samples, 0.75%)</title><rect x="46.1153%" y="549" width="0.7519%" height="15" fill="rgb(207,181,40)" fg:x="184" fg:w="3"/><text x="46.3653%" y="559.50"></text></g><g><title>[unknown] (2 samples, 0.50%)</title><rect x="46.3659%" y="533" width="0.5013%" height="15" fill="rgb(254,173,49)" fg:x="185" fg:w="2"/><text x="46.6159%" y="543.50"></text></g><g><title>[unknown] (2 samples, 0.50%)</title><rect x="48.3709%" y="437" width="0.5013%" height="15" fill="rgb(221,1,38)" fg:x="193" fg:w="2"/><text x="48.6209%" y="447.50"></text></g><g><title>[unknown] (2 samples, 0.50%)</title><rect x="48.3709%" y="421" width="0.5013%" height="15" fill="rgb(206,124,46)" fg:x="193" fg:w="2"/><text x="48.6209%" y="431.50"></text></g><g><title>[unknown] (2 samples, 0.50%)</title><rect x="48.3709%" y="405" width="0.5013%" height="15" fill="rgb(249,21,11)" fg:x="193" fg:w="2"/><text x="48.6209%" y="415.50"></text></g><g><title>[unknown] (2 samples, 0.50%)</title><rect x="48.3709%" y="389" width="0.5013%" height="15" fill="rgb(222,201,40)" fg:x="193" fg:w="2"/><text x="48.6209%" y="399.50"></text></g><g><title>malloc (8 samples, 2.01%)</title><rect x="47.3684%" y="501" width="2.0050%" height="15" fill="rgb(235,61,29)" fg:x="189" fg:w="8"/><text x="47.6184%" y="511.50">m..</text></g><g><title>[libc.so.6] (7 samples, 1.75%)</title><rect x="47.6190%" y="485" width="1.7544%" height="15" fill="rgb(219,207,3)" fg:x="190" fg:w="7"/><text x="47.8690%" y="495.50"></text></g><g><title>[libc.so.6] (6 samples, 1.50%)</title><rect x="47.8697%" y="469" width="1.5038%" height="15" fill="rgb(222,56,46)" fg:x="191" fg:w="6"/><text x="48.1197%" y="479.50"></text></g><g><title>[libc.so.6] (4 samples, 1.00%)</title><rect x="48.3709%" y="453" width="1.0025%" height="15" fill="rgb(239,76,54)" fg:x="193" fg:w="4"/><text x="48.6209%" y="463.50"></text></g><g><title>__mmap (2 samples, 0.50%)</title><rect x="48.8722%" y="437" width="0.5013%" height="15" fill="rgb(231,124,27)" fg:x="195" fg:w="2"/><text x="49.1222%" y="447.50"></text></g><g><title>[unknown] (2 samples, 0.50%)</title><rect x="48.8722%" y="421" width="0.5013%" height="15" fill="rgb(249,195,6)" fg:x="195" fg:w="2"/><text x="49.1222%" y="431.50"></text></g><g><title>[unknown] (2 samples, 0.50%)</title><rect x="48.8722%" y="405" width="0.5013%" height="15" fill="rgb(237,174,47)" fg:x="195" fg:w="2"/><text x="49.1222%" y="415.50"></text></g><g><title>[unknown] (2 samples, 0.50%)</title><rect x="48.8722%" y="389" width="0.5013%" height="15" fill="rgb(206,201,31)" fg:x="195" fg:w="2"/><text x="49.1222%" y="399.50"></text></g><g><title>[unknown] (2 samples, 0.50%)</title><rect x="48.8722%" y="373" width="0.5013%" height="15" fill="rgb(231,57,52)" fg:x="195" fg:w="2"/><text x="49.1222%" y="383.50"></text></g><g><title>[unknown] (2 samples, 0.50%)</title><rect x="48.8722%" y="357" width="0.5013%" height="15" fill="rgb(248,177,22)" fg:x="195" fg:w="2"/><text x="49.1222%" y="367.50"></text></g><g><title>[unknown] (2 samples, 0.50%)</title><rect x="48.8722%" y="341" width="0.5013%" height="15" fill="rgb(215,211,37)" fg:x="195" fg:w="2"/><text x="49.1222%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="49.1228%" y="325" width="0.2506%" height="15" fill="rgb(241,128,51)" fg:x="196" fg:w="1"/><text x="49.3728%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="49.1228%" y="309" width="0.2506%" height="15" fill="rgb(227,165,31)" fg:x="196" fg:w="1"/><text x="49.3728%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="49.1228%" y="293" width="0.2506%" height="15" fill="rgb(228,167,24)" fg:x="196" fg:w="1"/><text x="49.3728%" y="303.50"></text></g><g><title>pthread_attr_setaffinity_np (1 samples, 0.25%)</title><rect x="49.3734%" y="501" width="0.2506%" height="15" fill="rgb(228,143,12)" fg:x="197" fg:w="1"/><text x="49.6234%" y="511.50"></text></g><g><title>[libc.so.6] (1 samples, 0.25%)</title><rect x="49.3734%" y="485" width="0.2506%" height="15" fill="rgb(249,149,8)" fg:x="197" fg:w="1"/><text x="49.6234%" y="495.50"></text></g><g><title>pthread_getaffinity_np (1 samples, 0.25%)</title><rect x="49.6241%" y="501" width="0.2506%" height="15" fill="rgb(243,35,44)" fg:x="198" fg:w="1"/><text x="49.8741%" y="511.50"></text></g><g><title>std::sys::unix::thread::guard::current (11 samples, 2.76%)</title><rect x="47.3684%" y="533" width="2.7569%" height="15" fill="rgb(246,89,9)" fg:x="189" fg:w="11"/><text x="47.6184%" y="543.50">st..</text></g><g><title>pthread_getattr_np (11 samples, 2.76%)</title><rect x="47.3684%" y="517" width="2.7569%" height="15" fill="rgb(233,213,13)" fg:x="189" fg:w="11"/><text x="47.6184%" y="527.50">pt..</text></g><g><title>realloc (1 samples, 0.25%)</title><rect x="49.8747%" y="501" width="0.2506%" height="15" fill="rgb(233,141,41)" fg:x="199" fg:w="1"/><text x="50.1247%" y="511.50"></text></g><g><title>[libc.so.6] (1 samples, 0.25%)</title><rect x="50.3759%" y="485" width="0.2506%" height="15" fill="rgb(239,167,4)" fg:x="201" fg:w="1"/><text x="50.6259%" y="495.50"></text></g><g><title>std::sys::common::thread_local::fast_local::Key&lt;T&gt;::try_initialize (2 samples, 0.50%)</title><rect x="50.3759%" y="517" width="0.5013%" height="15" fill="rgb(209,217,16)" fg:x="201" fg:w="2"/><text x="50.6259%" y="527.50"></text></g><g><title>__cxa_thread_atexit_impl (2 samples, 0.50%)</title><rect x="50.3759%" y="501" width="0.5013%" height="15" fill="rgb(219,88,35)" fg:x="201" fg:w="2"/><text x="50.6259%" y="511.50"></text></g><g><title>__libc_calloc (1 samples, 0.25%)</title><rect x="50.6266%" y="485" width="0.2506%" height="15" fill="rgb(220,193,23)" fg:x="202" fg:w="1"/><text x="50.8766%" y="495.50"></text></g><g><title>std::sys::common::thread_local::lazy::LazyKeyInner&lt;T&gt;::initialize (2 samples, 0.50%)</title><rect x="50.8772%" y="517" width="0.5013%" height="15" fill="rgb(230,90,52)" fg:x="203" fg:w="2"/><text x="51.1272%" y="527.50"></text></g><g><title>tokio::loom::std::rand::seed (2 samples, 0.50%)</title><rect x="50.8772%" y="501" width="0.5013%" height="15" fill="rgb(252,106,19)" fg:x="203" fg:w="2"/><text x="51.1272%" y="511.50"></text></g><g><title>std::sys::common::thread_local::fast_local::Key&lt;T&gt;::try_initialize (2 samples, 0.50%)</title><rect x="50.8772%" y="485" width="0.5013%" height="15" fill="rgb(206,74,20)" fg:x="203" fg:w="2"/><text x="51.1272%" y="495.50"></text></g><g><title>std::sys::unix::rand::hashmap_random_keys (2 samples, 0.50%)</title><rect x="50.8772%" y="469" width="0.5013%" height="15" fill="rgb(230,138,44)" fg:x="203" fg:w="2"/><text x="51.1272%" y="479.50"></text></g><g><title>std::sys::unix::rand::imp::fill_bytes (1 samples, 0.25%)</title><rect x="51.1278%" y="453" width="0.2506%" height="15" fill="rgb(235,182,43)" fg:x="204" fg:w="1"/><text x="51.3778%" y="463.50"></text></g><g><title>std::sys::unix::rand::imp::getrandom_fill_bytes (1 samples, 0.25%)</title><rect x="51.1278%" y="437" width="0.2506%" height="15" fill="rgb(242,16,51)" fg:x="204" fg:w="1"/><text x="51.3778%" y="447.50"></text></g><g><title>std::sys::unix::rand::imp::getrandom (1 samples, 0.25%)</title><rect x="51.1278%" y="421" width="0.2506%" height="15" fill="rgb(248,9,4)" fg:x="204" fg:w="1"/><text x="51.3778%" y="431.50"></text></g><g><title>std::sys::unix::rand::imp::getrandom::getrandom (1 samples, 0.25%)</title><rect x="51.1278%" y="405" width="0.2506%" height="15" fill="rgb(210,31,22)" fg:x="204" fg:w="1"/><text x="51.3778%" y="415.50"></text></g><g><title>getrandom (1 samples, 0.25%)</title><rect x="51.1278%" y="389" width="0.2506%" height="15" fill="rgb(239,54,39)" fg:x="204" fg:w="1"/><text x="51.3778%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="51.1278%" y="373" width="0.2506%" height="15" fill="rgb(230,99,41)" fg:x="204" fg:w="1"/><text x="51.3778%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="51.1278%" y="357" width="0.2506%" height="15" fill="rgb(253,106,12)" fg:x="204" fg:w="1"/><text x="51.3778%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="51.1278%" y="341" width="0.2506%" height="15" fill="rgb(213,46,41)" fg:x="204" fg:w="1"/><text x="51.3778%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="51.1278%" y="325" width="0.2506%" height="15" fill="rgb(215,133,35)" fg:x="204" fg:w="1"/><text x="51.3778%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="51.1278%" y="309" width="0.2506%" height="15" fill="rgb(213,28,5)" fg:x="204" fg:w="1"/><text x="51.3778%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="51.1278%" y="293" width="0.2506%" height="15" fill="rgb(215,77,49)" fg:x="204" fg:w="1"/><text x="51.3778%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="51.1278%" y="277" width="0.2506%" height="15" fill="rgb(248,100,22)" fg:x="204" fg:w="1"/><text x="51.3778%" y="287.50"></text></g><g><title>std::sys::unix::futex::futex_wait (2 samples, 0.50%)</title><rect x="52.3810%" y="485" width="0.5013%" height="15" fill="rgb(208,67,9)" fg:x="209" fg:w="2"/><text x="52.6310%" y="495.50"></text></g><g><title>syscall (2 samples, 0.50%)</title><rect x="52.3810%" y="469" width="0.5013%" height="15" fill="rgb(219,133,21)" fg:x="209" fg:w="2"/><text x="52.6310%" y="479.50"></text></g><g><title>[unknown] (2 samples, 0.50%)</title><rect x="52.3810%" y="453" width="0.5013%" height="15" fill="rgb(246,46,29)" fg:x="209" fg:w="2"/><text x="52.6310%" y="463.50"></text></g><g><title>[unknown] (2 samples, 0.50%)</title><rect x="52.3810%" y="437" width="0.5013%" height="15" fill="rgb(246,185,52)" fg:x="209" fg:w="2"/><text x="52.6310%" y="447.50"></text></g><g><title>[unknown] (2 samples, 0.50%)</title><rect x="52.3810%" y="421" width="0.5013%" height="15" fill="rgb(252,136,11)" fg:x="209" fg:w="2"/><text x="52.6310%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="52.6316%" y="405" width="0.2506%" height="15" fill="rgb(219,138,53)" fg:x="210" fg:w="1"/><text x="52.8816%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="52.6316%" y="389" width="0.2506%" height="15" fill="rgb(211,51,23)" fg:x="210" fg:w="1"/><text x="52.8816%" y="399.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock_contended (12 samples, 3.01%)</title><rect x="52.3810%" y="501" width="3.0075%" height="15" fill="rgb(247,221,28)" fg:x="209" fg:w="12"/><text x="52.6310%" y="511.50">std..</text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::spin (10 samples, 2.51%)</title><rect x="52.8822%" y="485" width="2.5063%" height="15" fill="rgb(251,222,45)" fg:x="211" fg:w="10"/><text x="53.1322%" y="495.50">st..</text></g><g><title>core::sync::atomic::AtomicU32::load (2 samples, 0.50%)</title><rect x="54.8872%" y="469" width="0.5013%" height="15" fill="rgb(217,162,53)" fg:x="219" fg:w="2"/><text x="55.1372%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_load (2 samples, 0.50%)</title><rect x="54.8872%" y="453" width="0.5013%" height="15" fill="rgb(229,93,14)" fg:x="219" fg:w="2"/><text x="55.1372%" y="463.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::wake (1 samples, 0.25%)</title><rect x="55.3885%" y="501" width="0.2506%" height="15" fill="rgb(209,67,49)" fg:x="221" fg:w="1"/><text x="55.6385%" y="511.50"></text></g><g><title>syscall (4 samples, 1.00%)</title><rect x="55.6391%" y="501" width="1.0025%" height="15" fill="rgb(213,87,29)" fg:x="222" fg:w="4"/><text x="55.8891%" y="511.50"></text></g><g><title>[unknown] (4 samples, 1.00%)</title><rect x="55.6391%" y="485" width="1.0025%" height="15" fill="rgb(205,151,52)" fg:x="222" fg:w="4"/><text x="55.8891%" y="495.50"></text></g><g><title>[unknown] (4 samples, 1.00%)</title><rect x="55.6391%" y="469" width="1.0025%" height="15" fill="rgb(253,215,39)" fg:x="222" fg:w="4"/><text x="55.8891%" y="479.50"></text></g><g><title>[unknown] (4 samples, 1.00%)</title><rect x="55.6391%" y="453" width="1.0025%" height="15" fill="rgb(221,220,41)" fg:x="222" fg:w="4"/><text x="55.8891%" y="463.50"></text></g><g><title>[unknown] (4 samples, 1.00%)</title><rect x="55.6391%" y="437" width="1.0025%" height="15" fill="rgb(218,133,21)" fg:x="222" fg:w="4"/><text x="55.8891%" y="447.50"></text></g><g><title>[unknown] (2 samples, 0.50%)</title><rect x="56.1404%" y="421" width="0.5013%" height="15" fill="rgb(221,193,43)" fg:x="224" fg:w="2"/><text x="56.3904%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="56.3910%" y="405" width="0.2506%" height="15" fill="rgb(240,128,52)" fg:x="225" fg:w="1"/><text x="56.6410%" y="415.50"></text></g><g><title>[libc.so.6] (2 samples, 0.50%)</title><rect x="57.1429%" y="293" width="0.5013%" height="15" fill="rgb(253,114,12)" fg:x="228" fg:w="2"/><text x="57.3929%" y="303.50"></text></g><g><title>[libc.so.6] (1 samples, 0.25%)</title><rect x="57.3935%" y="277" width="0.2506%" height="15" fill="rgb(215,223,47)" fg:x="229" fg:w="1"/><text x="57.6435%" y="287.50"></text></g><g><title>[libc.so.6] (1 samples, 0.25%)</title><rect x="57.3935%" y="261" width="0.2506%" height="15" fill="rgb(248,225,23)" fg:x="229" fg:w="1"/><text x="57.6435%" y="271.50"></text></g><g><title>[libc.so.6] (1 samples, 0.25%)</title><rect x="57.3935%" y="245" width="0.2506%" height="15" fill="rgb(250,108,0)" fg:x="229" fg:w="1"/><text x="57.6435%" y="255.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.25%)</title><rect x="57.3935%" y="229" width="0.2506%" height="15" fill="rgb(228,208,7)" fg:x="229" fg:w="1"/><text x="57.6435%" y="239.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.25%)</title><rect x="57.3935%" y="213" width="0.2506%" height="15" fill="rgb(244,45,10)" fg:x="229" fg:w="1"/><text x="57.6435%" y="223.50"></text></g><g><title>[libc.so.6] (1 samples, 0.25%)</title><rect x="57.3935%" y="197" width="0.2506%" height="15" fill="rgb(207,125,25)" fg:x="229" fg:w="1"/><text x="57.6435%" y="207.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.25%)</title><rect x="57.3935%" y="181" width="0.2506%" height="15" fill="rgb(210,195,18)" fg:x="229" fg:w="1"/><text x="57.6435%" y="191.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.25%)</title><rect x="57.3935%" y="165" width="0.2506%" height="15" fill="rgb(249,80,12)" fg:x="229" fg:w="1"/><text x="57.6435%" y="175.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.25%)</title><rect x="57.3935%" y="149" width="0.2506%" height="15" fill="rgb(221,65,9)" fg:x="229" fg:w="1"/><text x="57.6435%" y="159.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.25%)</title><rect x="57.3935%" y="133" width="0.2506%" height="15" fill="rgb(235,49,36)" fg:x="229" fg:w="1"/><text x="57.6435%" y="143.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.25%)</title><rect x="57.3935%" y="117" width="0.2506%" height="15" fill="rgb(225,32,20)" fg:x="229" fg:w="1"/><text x="57.6435%" y="127.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.25%)</title><rect x="57.3935%" y="101" width="0.2506%" height="15" fill="rgb(215,141,46)" fg:x="229" fg:w="1"/><text x="57.6435%" y="111.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.25%)</title><rect x="57.3935%" y="85" width="0.2506%" height="15" fill="rgb(250,160,47)" fg:x="229" fg:w="1"/><text x="57.6435%" y="95.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.25%)</title><rect x="57.3935%" y="69" width="0.2506%" height="15" fill="rgb(216,222,40)" fg:x="229" fg:w="1"/><text x="57.6435%" y="79.50"></text></g><g><title>[libc.so.6] (1 samples, 0.25%)</title><rect x="57.6441%" y="261" width="0.2506%" height="15" fill="rgb(234,217,39)" fg:x="230" fg:w="1"/><text x="57.8941%" y="271.50"></text></g><g><title>[libnss_resolve.so.2] (3 samples, 0.75%)</title><rect x="57.8947%" y="245" width="0.7519%" height="15" fill="rgb(207,178,40)" fg:x="231" fg:w="3"/><text x="58.1447%" y="255.50"></text></g><g><title>[libnss_resolve.so.2] (2 samples, 0.50%)</title><rect x="58.1454%" y="229" width="0.5013%" height="15" fill="rgb(221,136,13)" fg:x="232" fg:w="2"/><text x="58.3954%" y="239.50"></text></g><g><title>[libnss_resolve.so.2] (1 samples, 0.25%)</title><rect x="58.3960%" y="213" width="0.2506%" height="15" fill="rgb(249,199,10)" fg:x="233" fg:w="1"/><text x="58.6460%" y="223.50"></text></g><g><title>__fprintf_chk (1 samples, 0.25%)</title><rect x="58.3960%" y="197" width="0.2506%" height="15" fill="rgb(249,222,13)" fg:x="233" fg:w="1"/><text x="58.6460%" y="207.50"></text></g><g><title>[libc.so.6] (1 samples, 0.25%)</title><rect x="58.3960%" y="181" width="0.2506%" height="15" fill="rgb(244,185,38)" fg:x="233" fg:w="1"/><text x="58.6460%" y="191.50"></text></g><g><title>[libc.so.6] (1 samples, 0.25%)</title><rect x="58.3960%" y="165" width="0.2506%" height="15" fill="rgb(236,202,9)" fg:x="233" fg:w="1"/><text x="58.6460%" y="175.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (7 samples, 1.75%)</title><rect x="57.1429%" y="373" width="1.7544%" height="15" fill="rgb(250,229,37)" fg:x="228" fg:w="7"/><text x="57.3929%" y="383.50"></text></g><g><title>&lt;std::sys_common::net::LookupHost as core::convert::TryFrom&lt;(&amp;str,u16)&gt;&gt;::try_from (7 samples, 1.75%)</title><rect x="57.1429%" y="357" width="1.7544%" height="15" fill="rgb(206,174,23)" fg:x="228" fg:w="7"/><text x="57.3929%" y="367.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (7 samples, 1.75%)</title><rect x="57.1429%" y="341" width="1.7544%" height="15" fill="rgb(211,33,43)" fg:x="228" fg:w="7"/><text x="57.3929%" y="351.50"></text></g><g><title>&lt;std::sys_common::net::LookupHost as core::convert::TryFrom&lt;(&amp;str,u16)&gt;&gt;::try_from::{{closure}} (7 samples, 1.75%)</title><rect x="57.1429%" y="325" width="1.7544%" height="15" fill="rgb(245,58,50)" fg:x="228" fg:w="7"/><text x="57.3929%" y="335.50"></text></g><g><title>getaddrinfo (7 samples, 1.75%)</title><rect x="57.1429%" y="309" width="1.7544%" height="15" fill="rgb(244,68,36)" fg:x="228" fg:w="7"/><text x="57.3929%" y="319.50"></text></g><g><title>_nss_resolve_gethostbyname4_r (5 samples, 1.25%)</title><rect x="57.6441%" y="293" width="1.2531%" height="15" fill="rgb(232,229,15)" fg:x="230" fg:w="5"/><text x="57.8941%" y="303.50"></text></g><g><title>[libnss_resolve.so.2] (5 samples, 1.25%)</title><rect x="57.6441%" y="277" width="1.2531%" height="15" fill="rgb(254,30,23)" fg:x="230" fg:w="5"/><text x="57.8941%" y="287.50"></text></g><g><title>[libnss_resolve.so.2] (4 samples, 1.00%)</title><rect x="57.8947%" y="261" width="1.0025%" height="15" fill="rgb(235,160,14)" fg:x="231" fg:w="4"/><text x="58.1447%" y="271.50"></text></g><g><title>cfree (1 samples, 0.25%)</title><rect x="58.6466%" y="245" width="0.2506%" height="15" fill="rgb(212,155,44)" fg:x="234" fg:w="1"/><text x="58.8966%" y="255.50"></text></g><g><title>[libc.so.6] (1 samples, 0.25%)</title><rect x="58.6466%" y="229" width="0.2506%" height="15" fill="rgb(226,2,50)" fg:x="234" fg:w="1"/><text x="58.8966%" y="239.50"></text></g><g><title>[libc.so.6] (1 samples, 0.25%)</title><rect x="58.6466%" y="213" width="0.2506%" height="15" fill="rgb(234,177,6)" fg:x="234" fg:w="1"/><text x="58.8966%" y="223.50"></text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (8 samples, 2.01%)</title><rect x="57.1429%" y="453" width="2.0050%" height="15" fill="rgb(217,24,9)" fg:x="228" fg:w="8"/><text x="57.3929%" y="463.50">&lt;..</text></g><g><title>&lt;alloc::string::String as std::net::socket_addr::ToSocketAddrs&gt;::to_socket_addrs (8 samples, 2.01%)</title><rect x="57.1429%" y="437" width="2.0050%" height="15" fill="rgb(220,13,46)" fg:x="228" fg:w="8"/><text x="57.3929%" y="447.50">&lt;..</text></g><g><title>&lt;str as std::net::socket_addr::ToSocketAddrs&gt;::to_socket_addrs (8 samples, 2.01%)</title><rect x="57.1429%" y="421" width="2.0050%" height="15" fill="rgb(239,221,27)" fg:x="228" fg:w="8"/><text x="57.3929%" y="431.50">&lt;..</text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (8 samples, 2.01%)</title><rect x="57.1429%" y="405" width="2.0050%" height="15" fill="rgb(222,198,25)" fg:x="228" fg:w="8"/><text x="57.3929%" y="415.50">&lt;..</text></g><g><title>&lt;std::sys_common::net::LookupHost as core::convert::TryFrom&lt;&amp;str&gt;&gt;::try_from (8 samples, 2.01%)</title><rect x="57.1429%" y="389" width="2.0050%" height="15" fill="rgb(211,99,13)" fg:x="228" fg:w="8"/><text x="57.3929%" y="399.50">&lt;..</text></g><g><title>core::str::&lt;impl str&gt;::rsplit_once (1 samples, 0.25%)</title><rect x="58.8972%" y="373" width="0.2506%" height="15" fill="rgb(232,111,31)" fg:x="235" fg:w="1"/><text x="59.1472%" y="383.50"></text></g><g><title>&lt;core::str::pattern::CharSearcher as core::str::pattern::ReverseSearcher&gt;::next_match_back (1 samples, 0.25%)</title><rect x="58.8972%" y="357" width="0.2506%" height="15" fill="rgb(245,82,37)" fg:x="235" fg:w="1"/><text x="59.1472%" y="367.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.25%)</title><rect x="58.8972%" y="341" width="0.2506%" height="15" fill="rgb(227,149,46)" fg:x="235" fg:w="1"/><text x="59.1472%" y="351.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.25%)</title><rect x="58.8972%" y="325" width="0.2506%" height="15" fill="rgb(218,36,50)" fg:x="235" fg:w="1"/><text x="59.1472%" y="335.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.25%)</title><rect x="58.8972%" y="309" width="0.2506%" height="15" fill="rgb(226,80,48)" fg:x="235" fg:w="1"/><text x="59.1472%" y="319.50"></text></g><g><title>[libc.so.6] (1 samples, 0.25%)</title><rect x="58.8972%" y="293" width="0.2506%" height="15" fill="rgb(238,224,15)" fg:x="235" fg:w="1"/><text x="59.1472%" y="303.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Data as tracing_subscriber::registry::SpanData&gt;::extensions (1 samples, 0.25%)</title><rect x="59.3985%" y="405" width="0.2506%" height="15" fill="rgb(241,136,10)" fg:x="237" fg:w="1"/><text x="59.6485%" y="415.50"></text></g><g><title>&lt;console_subscriber::ConsoleLayer as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_enter (2 samples, 0.50%)</title><rect x="59.3985%" y="437" width="0.5013%" height="15" fill="rgb(208,32,45)" fg:x="237" fg:w="2"/><text x="59.6485%" y="447.50"></text></g><g><title>&lt;console_subscriber::ConsoleLayer as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_enter::update (2 samples, 0.50%)</title><rect x="59.3985%" y="421" width="0.5013%" height="15" fill="rgb(207,135,9)" fg:x="237" fg:w="2"/><text x="59.6485%" y="431.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.25%)</title><rect x="59.6491%" y="405" width="0.2506%" height="15" fill="rgb(206,86,44)" fg:x="238" fg:w="1"/><text x="59.8991%" y="415.50"></text></g><g><title>clock_gettime (1 samples, 0.25%)</title><rect x="59.6491%" y="389" width="0.2506%" height="15" fill="rgb(245,177,15)" fg:x="238" fg:w="1"/><text x="59.8991%" y="399.50"></text></g><g><title>__vdso_clock_gettime (1 samples, 0.25%)</title><rect x="59.6491%" y="373" width="0.2506%" height="15" fill="rgb(206,64,50)" fg:x="238" fg:w="1"/><text x="59.8991%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="59.6491%" y="357" width="0.2506%" height="15" fill="rgb(234,36,40)" fg:x="238" fg:w="1"/><text x="59.8991%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="59.6491%" y="341" width="0.2506%" height="15" fill="rgb(213,64,8)" fg:x="238" fg:w="1"/><text x="59.8991%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="59.6491%" y="325" width="0.2506%" height="15" fill="rgb(210,75,36)" fg:x="238" fg:w="1"/><text x="59.8991%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="59.6491%" y="309" width="0.2506%" height="15" fill="rgb(229,88,21)" fg:x="238" fg:w="1"/><text x="59.8991%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="59.6491%" y="293" width="0.2506%" height="15" fill="rgb(252,204,47)" fg:x="238" fg:w="1"/><text x="59.8991%" y="303.50"></text></g><g><title>thread_local::ThreadLocal&lt;T&gt;::insert (1 samples, 0.25%)</title><rect x="60.1504%" y="421" width="0.2506%" height="15" fill="rgb(208,77,27)" fg:x="240" fg:w="1"/><text x="60.4004%" y="431.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::enter (7 samples, 1.75%)</title><rect x="59.8997%" y="437" width="1.7544%" height="15" fill="rgb(221,76,26)" fg:x="239" fg:w="7"/><text x="60.1497%" y="447.50"></text></g><g><title>thread_local::thread_id::get_slow (5 samples, 1.25%)</title><rect x="60.4010%" y="421" width="1.2531%" height="15" fill="rgb(225,139,18)" fg:x="241" fg:w="5"/><text x="60.6510%" y="431.50"></text></g><g><title>__cxa_thread_atexit_impl (3 samples, 0.75%)</title><rect x="60.9023%" y="405" width="0.7519%" height="15" fill="rgb(230,137,11)" fg:x="243" fg:w="3"/><text x="61.1523%" y="415.50"></text></g><g><title>__libc_calloc (3 samples, 0.75%)</title><rect x="60.9023%" y="389" width="0.7519%" height="15" fill="rgb(212,28,1)" fg:x="243" fg:w="3"/><text x="61.1523%" y="399.50"></text></g><g><title>[libc.so.6] (2 samples, 0.50%)</title><rect x="61.1529%" y="373" width="0.5013%" height="15" fill="rgb(248,164,17)" fg:x="244" fg:w="2"/><text x="61.4029%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="61.6541%" y="437" width="0.2506%" height="15" fill="rgb(222,171,42)" fg:x="246" fg:w="1"/><text x="61.9041%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="61.6541%" y="421" width="0.2506%" height="15" fill="rgb(243,84,45)" fg:x="246" fg:w="1"/><text x="61.9041%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="61.6541%" y="405" width="0.2506%" height="15" fill="rgb(252,49,23)" fg:x="246" fg:w="1"/><text x="61.9041%" y="415.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::enter (12 samples, 3.01%)</title><rect x="59.1479%" y="453" width="3.0075%" height="15" fill="rgb(215,19,7)" fg:x="236" fg:w="12"/><text x="59.3979%" y="463.50">&lt;tr..</text></g><g><title>tracing_subscriber::layer::context::Context&lt;S&gt;::if_enabled_for (1 samples, 0.25%)</title><rect x="61.9048%" y="437" width="0.2506%" height="15" fill="rgb(238,81,41)" fg:x="247" fg:w="1"/><text x="62.1548%" y="447.50"></text></g><g><title>tracing_subscriber::filter::layer_filters::FilterId::and (1 samples, 0.25%)</title><rect x="61.9048%" y="421" width="0.2506%" height="15" fill="rgb(210,199,37)" fg:x="247" fg:w="1"/><text x="62.1548%" y="431.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::exit (1 samples, 0.25%)</title><rect x="62.1554%" y="453" width="0.2506%" height="15" fill="rgb(244,192,49)" fg:x="248" fg:w="1"/><text x="62.4054%" y="463.50"></text></g><g><title>&lt;console_subscriber::ConsoleLayer as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_exit (1 samples, 0.25%)</title><rect x="62.1554%" y="437" width="0.2506%" height="15" fill="rgb(226,211,11)" fg:x="248" fg:w="1"/><text x="62.4054%" y="447.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_subscriber::registry::LookupSpan&gt;::span_data (1 samples, 0.25%)</title><rect x="62.1554%" y="421" width="0.2506%" height="15" fill="rgb(236,162,54)" fg:x="248" fg:w="1"/><text x="62.4054%" y="431.50"></text></g><g><title>tracing_core::span::Id::into_u64 (1 samples, 0.25%)</title><rect x="62.1554%" y="405" width="0.2506%" height="15" fill="rgb(220,229,9)" fg:x="248" fg:w="1"/><text x="62.4054%" y="415.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (8 samples, 2.01%)</title><rect x="63.6591%" y="405" width="2.0050%" height="15" fill="rgb(250,87,22)" fg:x="254" fg:w="8"/><text x="63.9091%" y="415.50">s..</text></g><g><title>clock_gettime (8 samples, 2.01%)</title><rect x="63.6591%" y="389" width="2.0050%" height="15" fill="rgb(239,43,17)" fg:x="254" fg:w="8"/><text x="63.9091%" y="399.50">c..</text></g><g><title>__vdso_clock_gettime (6 samples, 1.50%)</title><rect x="64.1604%" y="373" width="1.5038%" height="15" fill="rgb(231,177,25)" fg:x="256" fg:w="6"/><text x="64.4104%" y="383.50"></text></g><g><title>[unknown] (5 samples, 1.25%)</title><rect x="64.4110%" y="357" width="1.2531%" height="15" fill="rgb(219,179,1)" fg:x="257" fg:w="5"/><text x="64.6610%" y="367.50"></text></g><g><title>[unknown] (5 samples, 1.25%)</title><rect x="64.4110%" y="341" width="1.2531%" height="15" fill="rgb(238,219,53)" fg:x="257" fg:w="5"/><text x="64.6610%" y="351.50"></text></g><g><title>[unknown] (5 samples, 1.25%)</title><rect x="64.4110%" y="325" width="1.2531%" height="15" fill="rgb(232,167,36)" fg:x="257" fg:w="5"/><text x="64.6610%" y="335.50"></text></g><g><title>[unknown] (3 samples, 0.75%)</title><rect x="64.9123%" y="309" width="0.7519%" height="15" fill="rgb(244,19,51)" fg:x="259" fg:w="3"/><text x="65.1623%" y="319.50"></text></g><g><title>[unknown] (3 samples, 0.75%)</title><rect x="64.9123%" y="293" width="0.7519%" height="15" fill="rgb(224,6,22)" fg:x="259" fg:w="3"/><text x="65.1623%" y="303.50"></text></g><g><title>[unknown] (2 samples, 0.50%)</title><rect x="65.1629%" y="277" width="0.5013%" height="15" fill="rgb(224,145,5)" fg:x="260" fg:w="2"/><text x="65.4129%" y="287.50"></text></g><g><title>std::time::Instant::now (1 samples, 0.25%)</title><rect x="65.6642%" y="405" width="0.2506%" height="15" fill="rgb(234,130,49)" fg:x="262" fg:w="1"/><text x="65.9142%" y="415.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (1 samples, 0.25%)</title><rect x="65.6642%" y="389" width="0.2506%" height="15" fill="rgb(254,6,2)" fg:x="262" fg:w="1"/><text x="65.9142%" y="399.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::transition_worker_to_parked (1 samples, 0.25%)</title><rect x="65.9148%" y="405" width="0.2506%" height="15" fill="rgb(208,96,46)" fg:x="263" fg:w="1"/><text x="66.1648%" y="415.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::steal_into (5 samples, 1.25%)</title><rect x="66.1654%" y="405" width="1.2531%" height="15" fill="rgb(239,3,39)" fg:x="264" fg:w="5"/><text x="66.4154%" y="415.50"></text></g><g><title>tokio::runtime::context::with_defer (2 samples, 0.50%)</title><rect x="68.1704%" y="389" width="0.5013%" height="15" fill="rgb(233,210,1)" fg:x="272" fg:w="2"/><text x="68.4204%" y="399.50"></text></g><g><title>core::bool::&lt;impl bool&gt;::then (1 samples, 0.25%)</title><rect x="69.1729%" y="325" width="0.2506%" height="15" fill="rgb(244,137,37)" fg:x="276" fg:w="1"/><text x="69.4229%" y="335.50"></text></g><g><title>std::sys::unix::locks::futex_condvar::Condvar::wait (3 samples, 0.75%)</title><rect x="68.9223%" y="373" width="0.7519%" height="15" fill="rgb(240,136,2)" fg:x="275" fg:w="3"/><text x="69.1723%" y="383.50"></text></g><g><title>std::sys::unix::locks::futex_condvar::Condvar::wait_optional_timeout (3 samples, 0.75%)</title><rect x="68.9223%" y="357" width="0.7519%" height="15" fill="rgb(239,18,37)" fg:x="275" fg:w="3"/><text x="69.1723%" y="367.50"></text></g><g><title>std::sys::unix::futex::futex_wait (3 samples, 0.75%)</title><rect x="68.9223%" y="341" width="0.7519%" height="15" fill="rgb(218,185,22)" fg:x="275" fg:w="3"/><text x="69.1723%" y="351.50"></text></g><g><title>syscall (1 samples, 0.25%)</title><rect x="69.4236%" y="325" width="0.2506%" height="15" fill="rgb(225,218,4)" fg:x="277" fg:w="1"/><text x="69.6736%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="69.4236%" y="309" width="0.2506%" height="15" fill="rgb(230,182,32)" fg:x="277" fg:w="1"/><text x="69.6736%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="69.4236%" y="293" width="0.2506%" height="15" fill="rgb(242,56,43)" fg:x="277" fg:w="1"/><text x="69.6736%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="69.4236%" y="277" width="0.2506%" height="15" fill="rgb(233,99,24)" fg:x="277" fg:w="1"/><text x="69.6736%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="69.4236%" y="261" width="0.2506%" height="15" fill="rgb(234,209,42)" fg:x="277" fg:w="1"/><text x="69.6736%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="69.4236%" y="245" width="0.2506%" height="15" fill="rgb(227,7,12)" fg:x="277" fg:w="1"/><text x="69.6736%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="69.4236%" y="229" width="0.2506%" height="15" fill="rgb(245,203,43)" fg:x="277" fg:w="1"/><text x="69.6736%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="69.4236%" y="213" width="0.2506%" height="15" fill="rgb(238,205,33)" fg:x="277" fg:w="1"/><text x="69.6736%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="69.4236%" y="197" width="0.2506%" height="15" fill="rgb(231,56,7)" fg:x="277" fg:w="1"/><text x="69.6736%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="69.4236%" y="181" width="0.2506%" height="15" fill="rgb(244,186,29)" fg:x="277" fg:w="1"/><text x="69.6736%" y="191.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="69.4236%" y="165" width="0.2506%" height="15" fill="rgb(234,111,31)" fg:x="277" fg:w="1"/><text x="69.6736%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;[core::option::Option&lt;core::task::wake::Waker&gt;: 32]&gt; (1 samples, 0.25%)</title><rect x="69.6742%" y="357" width="0.2506%" height="15" fill="rgb(241,149,10)" fg:x="278" fg:w="1"/><text x="69.9242%" y="367.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::enabled (1 samples, 0.25%)</title><rect x="70.1754%" y="325" width="0.2506%" height="15" fill="rgb(249,206,44)" fg:x="280" fg:w="1"/><text x="70.4254%" y="335.50"></text></g><g><title>tracing_subscriber::filter::env::EnvFilter::enabled (1 samples, 0.25%)</title><rect x="70.1754%" y="309" width="0.2506%" height="15" fill="rgb(251,153,30)" fg:x="280" fg:w="1"/><text x="70.4254%" y="319.50"></text></g><g><title>tracing_core::metadata::Metadata::level (1 samples, 0.25%)</title><rect x="70.1754%" y="293" width="0.2506%" height="15" fill="rgb(239,152,38)" fg:x="280" fg:w="1"/><text x="70.4254%" y="303.50"></text></g><g><title>tracing::__macro_support::__is_enabled (2 samples, 0.50%)</title><rect x="70.1754%" y="341" width="0.5013%" height="15" fill="rgb(249,139,47)" fg:x="280" fg:w="2"/><text x="70.4254%" y="351.50"></text></g><g><title>std::sys::common::thread_local::fast_local::Key&lt;T&gt;::try_initialize (1 samples, 0.25%)</title><rect x="70.4261%" y="325" width="0.2506%" height="15" fill="rgb(244,64,35)" fg:x="281" fg:w="1"/><text x="70.6761%" y="335.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (7 samples, 1.75%)</title><rect x="69.9248%" y="357" width="1.7544%" height="15" fill="rgb(216,46,15)" fg:x="279" fg:w="7"/><text x="70.1748%" y="367.50"></text></g><g><title>tracing_core::event::Event::dispatch (4 samples, 1.00%)</title><rect x="70.6767%" y="341" width="1.0025%" height="15" fill="rgb(250,74,19)" fg:x="282" fg:w="4"/><text x="70.9267%" y="351.50"></text></g><g><title>tracing_core::dispatcher::get_default (4 samples, 1.00%)</title><rect x="70.6767%" y="325" width="1.0025%" height="15" fill="rgb(249,42,33)" fg:x="282" fg:w="4"/><text x="70.9267%" y="335.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::event (3 samples, 0.75%)</title><rect x="70.9273%" y="309" width="0.7519%" height="15" fill="rgb(242,149,17)" fg:x="283" fg:w="3"/><text x="71.1773%" y="319.50"></text></g><g><title>&lt;console_subscriber::ConsoleLayer as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_event (3 samples, 0.75%)</title><rect x="70.9273%" y="293" width="0.7519%" height="15" fill="rgb(244,29,21)" fg:x="283" fg:w="3"/><text x="71.1773%" y="303.50"></text></g><g><title>thread_local::ThreadLocal&lt;T&gt;::get (1 samples, 0.25%)</title><rect x="71.4286%" y="277" width="0.2506%" height="15" fill="rgb(220,130,37)" fg:x="285" fg:w="1"/><text x="71.6786%" y="287.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (1 samples, 0.25%)</title><rect x="71.6792%" y="357" width="0.2506%" height="15" fill="rgb(211,67,2)" fg:x="286" fg:w="1"/><text x="71.9292%" y="367.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time (10 samples, 2.51%)</title><rect x="69.6742%" y="373" width="2.5063%" height="15" fill="rgb(235,68,52)" fg:x="278" fg:w="10"/><text x="69.9242%" y="383.50">to..</text></g><g><title>tokio::runtime::time::wheel::Wheel::poll (1 samples, 0.25%)</title><rect x="71.9298%" y="357" width="0.2506%" height="15" fill="rgb(246,142,3)" fg:x="287" fg:w="1"/><text x="72.1798%" y="367.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (1 samples, 0.25%)</title><rect x="71.9298%" y="341" width="0.2506%" height="15" fill="rgb(241,25,7)" fg:x="287" fg:w="1"/><text x="72.1798%" y="351.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_expiration (1 samples, 0.25%)</title><rect x="71.9298%" y="325" width="0.2506%" height="15" fill="rgb(242,119,39)" fg:x="287" fg:w="1"/><text x="72.1798%" y="335.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (5 samples, 1.25%)</title><rect x="72.1805%" y="357" width="1.2531%" height="15" fill="rgb(241,98,45)" fg:x="288" fg:w="5"/><text x="72.4305%" y="367.50"></text></g><g><title>clock_gettime (5 samples, 1.25%)</title><rect x="72.1805%" y="341" width="1.2531%" height="15" fill="rgb(254,28,30)" fg:x="288" fg:w="5"/><text x="72.4305%" y="351.50"></text></g><g><title>__vdso_clock_gettime (4 samples, 1.00%)</title><rect x="72.4311%" y="325" width="1.0025%" height="15" fill="rgb(241,142,54)" fg:x="289" fg:w="4"/><text x="72.6811%" y="335.50"></text></g><g><title>[unknown] (2 samples, 0.50%)</title><rect x="72.9323%" y="309" width="0.5013%" height="15" fill="rgb(222,85,15)" fg:x="291" fg:w="2"/><text x="73.1823%" y="319.50"></text></g><g><title>[unknown] (2 samples, 0.50%)</title><rect x="72.9323%" y="293" width="0.5013%" height="15" fill="rgb(210,85,47)" fg:x="291" fg:w="2"/><text x="73.1823%" y="303.50"></text></g><g><title>[unknown] (2 samples, 0.50%)</title><rect x="72.9323%" y="277" width="0.5013%" height="15" fill="rgb(224,206,25)" fg:x="291" fg:w="2"/><text x="73.1823%" y="287.50"></text></g><g><title>[unknown] (2 samples, 0.50%)</title><rect x="72.9323%" y="261" width="0.5013%" height="15" fill="rgb(243,201,19)" fg:x="291" fg:w="2"/><text x="73.1823%" y="271.50"></text></g><g><title>[unknown] (2 samples, 0.50%)</title><rect x="72.9323%" y="245" width="0.5013%" height="15" fill="rgb(236,59,4)" fg:x="291" fg:w="2"/><text x="73.1823%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="73.1830%" y="229" width="0.2506%" height="15" fill="rgb(254,179,45)" fg:x="292" fg:w="1"/><text x="73.4330%" y="239.50"></text></g><g><title>&lt;&amp;mio::event::events::Events as core::iter::traits::collect::IntoIterator&gt;::into_iter (2 samples, 0.50%)</title><rect x="73.9348%" y="341" width="0.5013%" height="15" fill="rgb(226,14,10)" fg:x="295" fg:w="2"/><text x="74.1848%" y="351.50"></text></g><g><title>&lt;mio::event::events::Iter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.25%)</title><rect x="74.4361%" y="341" width="0.2506%" height="15" fill="rgb(244,27,41)" fg:x="297" fg:w="1"/><text x="74.6861%" y="351.50"></text></g><g><title>mio::sys::unix::selector::epoll::Selector::select (1 samples, 0.25%)</title><rect x="74.6867%" y="341" width="0.2506%" height="15" fill="rgb(235,35,32)" fg:x="298" fg:w="1"/><text x="74.9367%" y="351.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::schedule (2 samples, 0.50%)</title><rect x="74.9373%" y="309" width="0.5013%" height="15" fill="rgb(218,68,31)" fg:x="299" fg:w="2"/><text x="75.1873%" y="319.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::with (2 samples, 0.50%)</title><rect x="74.9373%" y="293" width="0.5013%" height="15" fill="rgb(207,120,37)" fg:x="299" fg:w="2"/><text x="75.1873%" y="303.50"></text></g><g><title>thread_local::ThreadLocal&lt;T&gt;::get (1 samples, 0.25%)</title><rect x="75.4386%" y="245" width="0.2506%" height="15" fill="rgb(227,98,0)" fg:x="301" fg:w="1"/><text x="75.6886%" y="255.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::event (2 samples, 0.50%)</title><rect x="75.4386%" y="277" width="0.5013%" height="15" fill="rgb(207,7,3)" fg:x="301" fg:w="2"/><text x="75.6886%" y="287.50"></text></g><g><title>&lt;console_subscriber::ConsoleLayer as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_event (2 samples, 0.50%)</title><rect x="75.4386%" y="261" width="0.5013%" height="15" fill="rgb(206,98,19)" fg:x="301" fg:w="2"/><text x="75.6886%" y="271.50"></text></g><g><title>tracing_core::field::ValueSet::record (1 samples, 0.25%)</title><rect x="75.6892%" y="245" width="0.2506%" height="15" fill="rgb(217,5,26)" fg:x="302" fg:w="1"/><text x="75.9392%" y="255.50"></text></g><g><title>&lt;console_subscriber::visitors::WakerVisitor as tracing_core::field::Visit&gt;::record_str (1 samples, 0.25%)</title><rect x="75.6892%" y="229" width="0.2506%" height="15" fill="rgb(235,190,38)" fg:x="302" fg:w="1"/><text x="75.9392%" y="239.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::wake (5 samples, 1.25%)</title><rect x="74.9373%" y="341" width="1.2531%" height="15" fill="rgb(247,86,24)" fg:x="299" fg:w="5"/><text x="75.1873%" y="351.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (5 samples, 1.25%)</title><rect x="74.9373%" y="325" width="1.2531%" height="15" fill="rgb(205,101,16)" fg:x="299" fg:w="5"/><text x="75.1873%" y="335.50"></text></g><g><title>tracing_core::event::Event::dispatch (3 samples, 0.75%)</title><rect x="75.4386%" y="309" width="0.7519%" height="15" fill="rgb(246,168,33)" fg:x="301" fg:w="3"/><text x="75.6886%" y="319.50"></text></g><g><title>tracing_core::dispatcher::get_default (3 samples, 0.75%)</title><rect x="75.4386%" y="293" width="0.7519%" height="15" fill="rgb(231,114,1)" fg:x="301" fg:w="3"/><text x="75.6886%" y="303.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::event_enabled (1 samples, 0.25%)</title><rect x="75.9398%" y="277" width="0.2506%" height="15" fill="rgb(207,184,53)" fg:x="303" fg:w="1"/><text x="76.1898%" y="287.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park_timeout (36 samples, 9.02%)</title><rect x="67.4185%" y="405" width="9.0226%" height="15" fill="rgb(224,95,51)" fg:x="269" fg:w="36"/><text x="67.6685%" y="415.50">tokio::runtim..</text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Parker::park (31 samples, 7.77%)</title><rect x="68.6717%" y="389" width="7.7694%" height="15" fill="rgb(212,188,45)" fg:x="274" fg:w="31"/><text x="68.9217%" y="399.50">tokio::runt..</text></g><g><title>tokio::runtime::time::Driver::park_internal (17 samples, 4.26%)</title><rect x="72.1805%" y="373" width="4.2607%" height="15" fill="rgb(223,154,38)" fg:x="288" fg:w="17"/><text x="72.4305%" y="383.50">tokio..</text></g><g><title>tokio::runtime::io::Driver::turn (12 samples, 3.01%)</title><rect x="73.4336%" y="357" width="3.0075%" height="15" fill="rgb(251,22,52)" fg:x="293" fg:w="12"/><text x="73.6836%" y="367.50">tok..</text></g><g><title>tokio::util::slab::Slab&lt;T&gt;::get (1 samples, 0.25%)</title><rect x="76.1905%" y="341" width="0.2506%" height="15" fill="rgb(229,209,22)" fg:x="304" fg:w="1"/><text x="76.4405%" y="351.50"></text></g><g><title>syscall (2 samples, 0.50%)</title><rect x="76.4411%" y="389" width="0.5013%" height="15" fill="rgb(234,138,34)" fg:x="305" fg:w="2"/><text x="76.6911%" y="399.50"></text></g><g><title>[unknown] (2 samples, 0.50%)</title><rect x="76.4411%" y="373" width="0.5013%" height="15" fill="rgb(212,95,11)" fg:x="305" fg:w="2"/><text x="76.6911%" y="383.50"></text></g><g><title>[unknown] (2 samples, 0.50%)</title><rect x="76.4411%" y="357" width="0.5013%" height="15" fill="rgb(240,179,47)" fg:x="305" fg:w="2"/><text x="76.6911%" y="367.50"></text></g><g><title>[unknown] (2 samples, 0.50%)</title><rect x="76.4411%" y="341" width="0.5013%" height="15" fill="rgb(240,163,11)" fg:x="305" fg:w="2"/><text x="76.6911%" y="351.50"></text></g><g><title>[unknown] (2 samples, 0.50%)</title><rect x="76.4411%" y="325" width="0.5013%" height="15" fill="rgb(236,37,12)" fg:x="305" fg:w="2"/><text x="76.6911%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="76.6917%" y="309" width="0.2506%" height="15" fill="rgb(232,164,16)" fg:x="306" fg:w="1"/><text x="76.9417%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="76.6917%" y="293" width="0.2506%" height="15" fill="rgb(244,205,15)" fg:x="306" fg:w="1"/><text x="76.9417%" y="303.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::worker_to_notify (1 samples, 0.25%)</title><rect x="76.9424%" y="389" width="0.2506%" height="15" fill="rgb(223,117,47)" fg:x="307" fg:w="1"/><text x="77.1924%" y="399.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::enter (1 samples, 0.25%)</title><rect x="77.4436%" y="325" width="0.2506%" height="15" fill="rgb(244,107,35)" fg:x="309" fg:w="1"/><text x="77.6936%" y="335.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::enter (1 samples, 0.25%)</title><rect x="77.4436%" y="309" width="0.2506%" height="15" fill="rgb(205,140,8)" fg:x="309" fg:w="1"/><text x="77.6936%" y="319.50"></text></g><g><title>thread_local::thread_id::get_slow (1 samples, 0.25%)</title><rect x="77.4436%" y="293" width="0.2506%" height="15" fill="rgb(228,84,46)" fg:x="309" fg:w="1"/><text x="77.6936%" y="303.50"></text></g><g><title>&lt;futures_util::stream::stream::split::SplitStream&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (2 samples, 0.50%)</title><rect x="77.9449%" y="293" width="0.5013%" height="15" fill="rgb(254,188,9)" fg:x="311" fg:w="2"/><text x="78.1949%" y="303.50"></text></g><g><title>&lt;tokio_util::codec::framed_impl::FramedImpl&lt;T,U,R&gt; as futures_core::stream::Stream&gt;::poll_next (2 samples, 0.50%)</title><rect x="77.9449%" y="277" width="0.5013%" height="15" fill="rgb(206,112,54)" fg:x="311" fg:w="2"/><text x="78.1949%" y="287.50"></text></g><g><title>&lt;bittorrent_rust::tcp_wire::messages::PeerCodec as tokio_util::codec::decoder::Decoder&gt;::decode (1 samples, 0.25%)</title><rect x="78.1955%" y="261" width="0.2506%" height="15" fill="rgb(216,84,49)" fg:x="312" fg:w="1"/><text x="78.4455%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.25%)</title><rect x="78.1955%" y="245" width="0.2506%" height="15" fill="rgb(214,194,35)" fg:x="312" fg:w="1"/><text x="78.4455%" y="255.50"></text></g><g><title>[libc.so.6] (1 samples, 0.25%)</title><rect x="78.1955%" y="229" width="0.2506%" height="15" fill="rgb(249,28,3)" fg:x="312" fg:w="1"/><text x="78.4455%" y="239.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::enter (1 samples, 0.25%)</title><rect x="78.4461%" y="261" width="0.2506%" height="15" fill="rgb(222,56,52)" fg:x="313" fg:w="1"/><text x="78.6961%" y="271.50"></text></g><g><title>&lt;console_subscriber::ConsoleLayer as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_enter (1 samples, 0.25%)</title><rect x="78.4461%" y="245" width="0.2506%" height="15" fill="rgb(245,217,50)" fg:x="313" fg:w="1"/><text x="78.6961%" y="255.50"></text></g><g><title>&lt;console_subscriber::ConsoleLayer as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_enter::update (1 samples, 0.25%)</title><rect x="78.4461%" y="229" width="0.2506%" height="15" fill="rgb(213,201,24)" fg:x="313" fg:w="1"/><text x="78.6961%" y="239.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::exit (1 samples, 0.25%)</title><rect x="78.6967%" y="261" width="0.2506%" height="15" fill="rgb(248,116,28)" fg:x="314" fg:w="1"/><text x="78.9467%" y="271.50"></text></g><g><title>&lt;console_subscriber::ConsoleLayer as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_exit (1 samples, 0.25%)</title><rect x="78.6967%" y="245" width="0.2506%" height="15" fill="rgb(219,72,43)" fg:x="314" fg:w="1"/><text x="78.9467%" y="255.50"></text></g><g><title>&lt;console_subscriber::ConsoleLayer as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_exit::update (1 samples, 0.25%)</title><rect x="78.6967%" y="229" width="0.2506%" height="15" fill="rgb(209,138,14)" fg:x="314" fg:w="1"/><text x="78.9467%" y="239.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.25%)</title><rect x="78.6967%" y="213" width="0.2506%" height="15" fill="rgb(222,18,33)" fg:x="314" fg:w="1"/><text x="78.9467%" y="223.50"></text></g><g><title>clock_gettime (1 samples, 0.25%)</title><rect x="78.6967%" y="197" width="0.2506%" height="15" fill="rgb(213,199,7)" fg:x="314" fg:w="1"/><text x="78.9467%" y="207.50"></text></g><g><title>__vdso_clock_gettime (1 samples, 0.25%)</title><rect x="78.6967%" y="181" width="0.2506%" height="15" fill="rgb(250,110,10)" fg:x="314" fg:w="1"/><text x="78.9467%" y="191.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="78.6967%" y="165" width="0.2506%" height="15" fill="rgb(248,123,6)" fg:x="314" fg:w="1"/><text x="78.9467%" y="175.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="78.6967%" y="149" width="0.2506%" height="15" fill="rgb(206,91,31)" fg:x="314" fg:w="1"/><text x="78.9467%" y="159.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="78.6967%" y="133" width="0.2506%" height="15" fill="rgb(211,154,13)" fg:x="314" fg:w="1"/><text x="78.9467%" y="143.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="78.6967%" y="117" width="0.2506%" height="15" fill="rgb(225,148,7)" fg:x="314" fg:w="1"/><text x="78.9467%" y="127.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="78.6967%" y="101" width="0.2506%" height="15" fill="rgb(220,160,43)" fg:x="314" fg:w="1"/><text x="78.9467%" y="111.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="78.6967%" y="85" width="0.2506%" height="15" fill="rgb(213,52,39)" fg:x="314" fg:w="1"/><text x="78.9467%" y="95.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::enter (1 samples, 0.25%)</title><rect x="78.9474%" y="229" width="0.2506%" height="15" fill="rgb(243,137,7)" fg:x="315" fg:w="1"/><text x="79.1974%" y="239.50"></text></g><g><title>&lt;console_subscriber::ConsoleLayer as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_enter (1 samples, 0.25%)</title><rect x="78.9474%" y="213" width="0.2506%" height="15" fill="rgb(230,79,13)" fg:x="315" fg:w="1"/><text x="79.1974%" y="223.50"></text></g><g><title>&lt;console_subscriber::ConsoleLayer as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_enter::update (1 samples, 0.25%)</title><rect x="78.9474%" y="197" width="0.2506%" height="15" fill="rgb(247,105,23)" fg:x="315" fg:w="1"/><text x="79.1974%" y="207.50"></text></g><g><title>&lt;tokio::util::trace::InstrumentedAsyncOp&lt;F&gt; as core::future::future::Future&gt;::poll (4 samples, 1.00%)</title><rect x="78.4461%" y="277" width="1.0025%" height="15" fill="rgb(223,179,41)" fg:x="313" fg:w="4"/><text x="78.6961%" y="287.50"></text></g><g><title>tokio::time::interval::Interval::poll_tick (2 samples, 0.50%)</title><rect x="78.9474%" y="261" width="0.5013%" height="15" fill="rgb(218,9,34)" fg:x="315" fg:w="2"/><text x="79.1974%" y="271.50"></text></g><g><title>&lt;tokio::time::sleep::Sleep as core::future::future::Future&gt;::poll (2 samples, 0.50%)</title><rect x="78.9474%" y="245" width="0.5013%" height="15" fill="rgb(222,106,8)" fg:x="315" fg:w="2"/><text x="79.1974%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::EnteredSpan&gt; (1 samples, 0.25%)</title><rect x="79.1980%" y="229" width="0.2506%" height="15" fill="rgb(211,220,0)" fg:x="316" fg:w="1"/><text x="79.4480%" y="239.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::exit (1 samples, 0.25%)</title><rect x="79.1980%" y="213" width="0.2506%" height="15" fill="rgb(229,52,16)" fg:x="316" fg:w="1"/><text x="79.4480%" y="223.50"></text></g><g><title>&lt;console_subscriber::ConsoleLayer as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_exit (1 samples, 0.25%)</title><rect x="79.1980%" y="197" width="0.2506%" height="15" fill="rgb(212,155,18)" fg:x="316" fg:w="1"/><text x="79.4480%" y="207.50"></text></g><g><title>&lt;console_subscriber::ConsoleLayer as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_exit::update (1 samples, 0.25%)</title><rect x="79.1980%" y="181" width="0.2506%" height="15" fill="rgb(242,21,14)" fg:x="316" fg:w="1"/><text x="79.4480%" y="191.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.25%)</title><rect x="79.1980%" y="165" width="0.2506%" height="15" fill="rgb(222,19,48)" fg:x="316" fg:w="1"/><text x="79.4480%" y="175.50"></text></g><g><title>clock_gettime (1 samples, 0.25%)</title><rect x="79.1980%" y="149" width="0.2506%" height="15" fill="rgb(232,45,27)" fg:x="316" fg:w="1"/><text x="79.4480%" y="159.50"></text></g><g><title>__vdso_clock_gettime (1 samples, 0.25%)</title><rect x="79.1980%" y="133" width="0.2506%" height="15" fill="rgb(249,103,42)" fg:x="316" fg:w="1"/><text x="79.4480%" y="143.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="79.1980%" y="117" width="0.2506%" height="15" fill="rgb(246,81,33)" fg:x="316" fg:w="1"/><text x="79.4480%" y="127.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="79.1980%" y="101" width="0.2506%" height="15" fill="rgb(252,33,42)" fg:x="316" fg:w="1"/><text x="79.4480%" y="111.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="79.1980%" y="85" width="0.2506%" height="15" fill="rgb(209,212,41)" fg:x="316" fg:w="1"/><text x="79.4480%" y="95.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="79.1980%" y="69" width="0.2506%" height="15" fill="rgb(207,154,6)" fg:x="316" fg:w="1"/><text x="79.4480%" y="79.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="79.1980%" y="53" width="0.2506%" height="15" fill="rgb(223,64,47)" fg:x="316" fg:w="1"/><text x="79.4480%" y="63.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="79.1980%" y="37" width="0.2506%" height="15" fill="rgb(211,161,38)" fg:x="316" fg:w="1"/><text x="79.4480%" y="47.50"></text></g><g><title>&lt;tokio::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (7 samples, 1.75%)</title><rect x="77.9449%" y="309" width="1.7544%" height="15" fill="rgb(219,138,40)" fg:x="311" fg:w="7"/><text x="78.1949%" y="319.50"></text></g><g><title>tokio::time::interval::Interval::tick::{{closure}} (5 samples, 1.25%)</title><rect x="78.4461%" y="293" width="1.2531%" height="15" fill="rgb(241,228,46)" fg:x="313" fg:w="5"/><text x="78.6961%" y="303.50"></text></g><g><title>tokio::util::trace::async_op (1 samples, 0.25%)</title><rect x="79.4486%" y="277" width="0.2506%" height="15" fill="rgb(223,209,38)" fg:x="317" fg:w="1"/><text x="79.6986%" y="287.50"></text></g><g><title>tracing::span::Span::in_scope (1 samples, 0.25%)</title><rect x="79.4486%" y="261" width="0.2506%" height="15" fill="rgb(236,164,45)" fg:x="317" fg:w="1"/><text x="79.6986%" y="271.50"></text></g><g><title>tracing::span::Span::new (1 samples, 0.25%)</title><rect x="79.4486%" y="245" width="0.2506%" height="15" fill="rgb(231,15,5)" fg:x="317" fg:w="1"/><text x="79.6986%" y="255.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (1 samples, 0.25%)</title><rect x="79.4486%" y="229" width="0.2506%" height="15" fill="rgb(252,35,15)" fg:x="317" fg:w="1"/><text x="79.6986%" y="239.50"></text></g><g><title>&lt;console_subscriber::ConsoleLayer as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_new_span (1 samples, 0.25%)</title><rect x="79.4486%" y="213" width="0.2506%" height="15" fill="rgb(248,181,18)" fg:x="317" fg:w="1"/><text x="79.6986%" y="223.50"></text></g><g><title>console_subscriber::ConsoleLayer::is_id_async_op (1 samples, 0.25%)</title><rect x="79.4486%" y="197" width="0.2506%" height="15" fill="rgb(233,39,42)" fg:x="317" fg:w="1"/><text x="79.6986%" y="207.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.25%)</title><rect x="79.6992%" y="293" width="0.2506%" height="15" fill="rgb(238,110,33)" fg:x="318" fg:w="1"/><text x="79.9492%" y="303.50"></text></g><g><title>tokio::runtime::task::waker::drop_waker (1 samples, 0.25%)</title><rect x="79.6992%" y="277" width="0.2506%" height="15" fill="rgb(233,195,10)" fg:x="318" fg:w="1"/><text x="79.9492%" y="287.50"></text></g><g><title>tracing_core::event::Event::dispatch (1 samples, 0.25%)</title><rect x="79.6992%" y="261" width="0.2506%" height="15" fill="rgb(254,105,3)" fg:x="318" fg:w="1"/><text x="79.9492%" y="271.50"></text></g><g><title>tracing_core::dispatcher::get_default (1 samples, 0.25%)</title><rect x="79.6992%" y="245" width="0.2506%" height="15" fill="rgb(221,225,9)" fg:x="318" fg:w="1"/><text x="79.9492%" y="255.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::event (1 samples, 0.25%)</title><rect x="79.6992%" y="229" width="0.2506%" height="15" fill="rgb(224,227,45)" fg:x="318" fg:w="1"/><text x="79.9492%" y="239.50"></text></g><g><title>&lt;console_subscriber::ConsoleLayer as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_event (1 samples, 0.25%)</title><rect x="79.6992%" y="213" width="0.2506%" height="15" fill="rgb(229,198,43)" fg:x="318" fg:w="1"/><text x="79.9492%" y="223.50"></text></g><g><title>tracing_core::field::ValueSet::record (1 samples, 0.25%)</title><rect x="79.6992%" y="197" width="0.2506%" height="15" fill="rgb(206,209,35)" fg:x="318" fg:w="1"/><text x="79.9492%" y="207.50"></text></g><g><title>&lt;console_subscriber::visitors::WakerVisitor as tracing_core::field::Visit&gt;::record_str (1 samples, 0.25%)</title><rect x="79.6992%" y="181" width="0.2506%" height="15" fill="rgb(245,195,53)" fg:x="318" fg:w="1"/><text x="79.9492%" y="191.50"></text></g><g><title>&lt;tokio::sync::oneshot::Receiver&lt;T&gt; as core::future::future::Future&gt;::poll (2 samples, 0.50%)</title><rect x="79.6992%" y="309" width="0.5013%" height="15" fill="rgb(240,92,26)" fg:x="318" fg:w="2"/><text x="79.9492%" y="319.50"></text></g><g><title>tracing_core::event::Event::dispatch (1 samples, 0.25%)</title><rect x="79.9499%" y="293" width="0.2506%" height="15" fill="rgb(207,40,23)" fg:x="319" fg:w="1"/><text x="80.1999%" y="303.50"></text></g><g><title>tracing_core::dispatcher::get_default (1 samples, 0.25%)</title><rect x="79.9499%" y="277" width="0.2506%" height="15" fill="rgb(223,111,35)" fg:x="319" fg:w="1"/><text x="80.1999%" y="287.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::event (1 samples, 0.25%)</title><rect x="79.9499%" y="261" width="0.2506%" height="15" fill="rgb(229,147,28)" fg:x="319" fg:w="1"/><text x="80.1999%" y="271.50"></text></g><g><title>&lt;console_subscriber::ConsoleLayer as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_event (1 samples, 0.25%)</title><rect x="79.9499%" y="245" width="0.2506%" height="15" fill="rgb(211,29,28)" fg:x="319" fg:w="1"/><text x="80.1999%" y="255.50"></text></g><g><title>tracing_subscriber::registry::extensions::ExtensionsInner::get (1 samples, 0.25%)</title><rect x="79.9499%" y="229" width="0.2506%" height="15" fill="rgb(228,72,33)" fg:x="319" fg:w="1"/><text x="80.1999%" y="239.50"></text></g><g><title>&lt;T as core::any::Any&gt;::type_id (1 samples, 0.25%)</title><rect x="79.9499%" y="213" width="0.2506%" height="15" fill="rgb(205,214,31)" fg:x="319" fg:w="1"/><text x="80.1999%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::sync::rwlock::write_guard::RwLockWriteGuard&lt;bittorrent_rust::bitfield::Bitfield&gt;&gt; (1 samples, 0.25%)</title><rect x="80.2005%" y="293" width="0.2506%" height="15" fill="rgb(224,111,15)" fg:x="320" fg:w="1"/><text x="80.4505%" y="303.50"></text></g><g><title>tracing::span::Span::in_scope (1 samples, 0.25%)</title><rect x="80.2005%" y="277" width="0.2506%" height="15" fill="rgb(253,21,26)" fg:x="320" fg:w="1"/><text x="80.4505%" y="287.50"></text></g><g><title>tokio::sync::rwlock::RwLock&lt;T&gt;::read::{{closure}} (1 samples, 0.25%)</title><rect x="80.4511%" y="293" width="0.2506%" height="15" fill="rgb(245,139,43)" fg:x="321" fg:w="1"/><text x="80.7011%" y="303.50"></text></g><g><title>&lt;tokio::util::trace::InstrumentedAsyncOp&lt;F&gt; as core::future::future::Future&gt;::poll (1 samples, 0.25%)</title><rect x="80.4511%" y="277" width="0.2506%" height="15" fill="rgb(252,170,7)" fg:x="321" fg:w="1"/><text x="80.7011%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::util::trace::AsyncOpTracingCtx&gt; (1 samples, 0.25%)</title><rect x="80.4511%" y="261" width="0.2506%" height="15" fill="rgb(231,118,14)" fg:x="321" fg:w="1"/><text x="80.7011%" y="271.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (1 samples, 0.25%)</title><rect x="80.4511%" y="245" width="0.2506%" height="15" fill="rgb(238,83,0)" fg:x="321" fg:w="1"/><text x="80.7011%" y="255.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (1 samples, 0.25%)</title><rect x="80.4511%" y="229" width="0.2506%" height="15" fill="rgb(221,39,39)" fg:x="321" fg:w="1"/><text x="80.7011%" y="239.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::try_close (1 samples, 0.25%)</title><rect x="80.4511%" y="213" width="0.2506%" height="15" fill="rgb(222,119,46)" fg:x="321" fg:w="1"/><text x="80.7011%" y="223.50"></text></g><g><title>&lt;tokio::sync::batch_semaphore::Acquire as core::future::future::Future&gt;::poll (1 samples, 0.25%)</title><rect x="80.7018%" y="261" width="0.2506%" height="15" fill="rgb(222,165,49)" fg:x="322" fg:w="1"/><text x="80.9518%" y="271.50"></text></g><g><title>tracing_core::event::Event::dispatch (1 samples, 0.25%)</title><rect x="80.7018%" y="245" width="0.2506%" height="15" fill="rgb(219,113,52)" fg:x="322" fg:w="1"/><text x="80.9518%" y="255.50"></text></g><g><title>tracing_core::dispatcher::get_default (1 samples, 0.25%)</title><rect x="80.7018%" y="229" width="0.2506%" height="15" fill="rgb(214,7,15)" fg:x="322" fg:w="1"/><text x="80.9518%" y="239.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::event (1 samples, 0.25%)</title><rect x="80.7018%" y="213" width="0.2506%" height="15" fill="rgb(235,32,4)" fg:x="322" fg:w="1"/><text x="80.9518%" y="223.50"></text></g><g><title>&lt;console_subscriber::ConsoleLayer as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_event (1 samples, 0.25%)</title><rect x="80.7018%" y="197" width="0.2506%" height="15" fill="rgb(238,90,54)" fg:x="322" fg:w="1"/><text x="80.9518%" y="207.50"></text></g><g><title>tokio::sync::mpsc::bounded::Permit&lt;T&gt;::send (1 samples, 0.25%)</title><rect x="80.7018%" y="181" width="0.2506%" height="15" fill="rgb(213,208,19)" fg:x="322" fg:w="1"/><text x="80.9518%" y="191.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::wake (1 samples, 0.25%)</title><rect x="80.7018%" y="165" width="0.2506%" height="15" fill="rgb(233,156,4)" fg:x="322" fg:w="1"/><text x="80.9518%" y="175.50"></text></g><g><title>&lt;tokio::util::trace::InstrumentedAsyncOp&lt;F&gt; as core::future::future::Future&gt;::poll (2 samples, 0.50%)</title><rect x="80.7018%" y="277" width="0.5013%" height="15" fill="rgb(207,194,5)" fg:x="322" fg:w="2"/><text x="80.9518%" y="287.50"></text></g><g><title>tokio::sync::batch_semaphore::Semaphore::acquire (1 samples, 0.25%)</title><rect x="80.9524%" y="261" width="0.2506%" height="15" fill="rgb(206,111,30)" fg:x="323" fg:w="1"/><text x="81.2024%" y="271.50"></text></g><g><title>tracing::span::Span::in_scope (1 samples, 0.25%)</title><rect x="80.9524%" y="245" width="0.2506%" height="15" fill="rgb(243,70,54)" fg:x="323" fg:w="1"/><text x="81.2024%" y="255.50"></text></g><g><title>tracing::__macro_support::__is_enabled (1 samples, 0.25%)</title><rect x="80.9524%" y="229" width="0.2506%" height="15" fill="rgb(242,28,8)" fg:x="323" fg:w="1"/><text x="81.2024%" y="239.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::enabled (1 samples, 0.25%)</title><rect x="80.9524%" y="213" width="0.2506%" height="15" fill="rgb(219,106,18)" fg:x="323" fg:w="1"/><text x="81.2024%" y="223.50"></text></g><g><title>bittorrent_rust::peer::Peer::request_next_piece::{{closure}} (5 samples, 1.25%)</title><rect x="80.2005%" y="309" width="1.2531%" height="15" fill="rgb(244,222,10)" fg:x="320" fg:w="5"/><text x="80.4505%" y="319.50"></text></g><g><title>tokio::sync::rwlock::RwLock&lt;T&gt;::write::{{closure}} (3 samples, 0.75%)</title><rect x="80.7018%" y="293" width="0.7519%" height="15" fill="rgb(236,179,52)" fg:x="322" fg:w="3"/><text x="80.9518%" y="303.50"></text></g><g><title>tokio::util::trace::async_op (1 samples, 0.25%)</title><rect x="81.2030%" y="277" width="0.2506%" height="15" fill="rgb(213,23,39)" fg:x="324" fg:w="1"/><text x="81.4530%" y="287.50"></text></g><g><title>tracing::span::Span::in_scope (1 samples, 0.25%)</title><rect x="81.2030%" y="261" width="0.2506%" height="15" fill="rgb(238,48,10)" fg:x="324" fg:w="1"/><text x="81.4530%" y="271.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::enter (1 samples, 0.25%)</title><rect x="81.2030%" y="245" width="0.2506%" height="15" fill="rgb(251,196,23)" fg:x="324" fg:w="1"/><text x="81.4530%" y="255.50"></text></g><g><title>&lt;console_subscriber::ConsoleLayer as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_enter (1 samples, 0.25%)</title><rect x="81.2030%" y="229" width="0.2506%" height="15" fill="rgb(250,152,24)" fg:x="324" fg:w="1"/><text x="81.4530%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::util::trace::AsyncOpTracingCtx&gt; (1 samples, 0.25%)</title><rect x="81.4536%" y="309" width="0.2506%" height="15" fill="rgb(209,150,17)" fg:x="325" fg:w="1"/><text x="81.7036%" y="319.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (1 samples, 0.25%)</title><rect x="81.4536%" y="293" width="0.2506%" height="15" fill="rgb(234,202,34)" fg:x="325" fg:w="1"/><text x="81.7036%" y="303.50"></text></g><g><title>sharded_slab::page::Shared&lt;T,C&gt;::mark_clear (1 samples, 0.25%)</title><rect x="81.4536%" y="277" width="0.2506%" height="15" fill="rgb(253,148,53)" fg:x="325" fg:w="1"/><text x="81.7036%" y="287.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::DataInner as sharded_slab::clear::Clear&gt;::clear (1 samples, 0.25%)</title><rect x="81.4536%" y="261" width="0.2506%" height="15" fill="rgb(218,129,16)" fg:x="325" fg:w="1"/><text x="81.7036%" y="271.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (1 samples, 0.25%)</title><rect x="81.4536%" y="245" width="0.2506%" height="15" fill="rgb(216,85,19)" fg:x="325" fg:w="1"/><text x="81.7036%" y="255.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (1 samples, 0.25%)</title><rect x="81.4536%" y="229" width="0.2506%" height="15" fill="rgb(235,228,7)" fg:x="325" fg:w="1"/><text x="81.7036%" y="239.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::try_close (1 samples, 0.25%)</title><rect x="81.4536%" y="213" width="0.2506%" height="15" fill="rgb(245,175,0)" fg:x="325" fg:w="1"/><text x="81.7036%" y="223.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::get (1 samples, 0.25%)</title><rect x="81.4536%" y="197" width="0.2506%" height="15" fill="rgb(208,168,36)" fg:x="325" fg:w="1"/><text x="81.7036%" y="207.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::enter (1 samples, 0.25%)</title><rect x="81.7043%" y="277" width="0.2506%" height="15" fill="rgb(246,171,24)" fg:x="326" fg:w="1"/><text x="81.9543%" y="287.50"></text></g><g><title>&lt;console_subscriber::ConsoleLayer as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_enter (1 samples, 0.25%)</title><rect x="81.7043%" y="261" width="0.2506%" height="15" fill="rgb(215,142,24)" fg:x="326" fg:w="1"/><text x="81.9543%" y="271.50"></text></g><g><title>&lt;console_subscriber::ConsoleLayer as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_enter::update (1 samples, 0.25%)</title><rect x="81.7043%" y="245" width="0.2506%" height="15" fill="rgb(250,187,7)" fg:x="326" fg:w="1"/><text x="81.9543%" y="255.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.25%)</title><rect x="81.7043%" y="229" width="0.2506%" height="15" fill="rgb(228,66,33)" fg:x="326" fg:w="1"/><text x="81.9543%" y="239.50"></text></g><g><title>clock_gettime (1 samples, 0.25%)</title><rect x="81.7043%" y="213" width="0.2506%" height="15" fill="rgb(234,215,21)" fg:x="326" fg:w="1"/><text x="81.9543%" y="223.50"></text></g><g><title>__vdso_clock_gettime (1 samples, 0.25%)</title><rect x="81.7043%" y="197" width="0.2506%" height="15" fill="rgb(222,191,20)" fg:x="326" fg:w="1"/><text x="81.9543%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="81.7043%" y="181" width="0.2506%" height="15" fill="rgb(245,79,54)" fg:x="326" fg:w="1"/><text x="81.9543%" y="191.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="81.7043%" y="165" width="0.2506%" height="15" fill="rgb(240,10,37)" fg:x="326" fg:w="1"/><text x="81.9543%" y="175.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="81.7043%" y="149" width="0.2506%" height="15" fill="rgb(214,192,32)" fg:x="326" fg:w="1"/><text x="81.9543%" y="159.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="81.7043%" y="133" width="0.2506%" height="15" fill="rgb(209,36,54)" fg:x="326" fg:w="1"/><text x="81.9543%" y="143.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="81.7043%" y="117" width="0.2506%" height="15" fill="rgb(220,10,11)" fg:x="326" fg:w="1"/><text x="81.9543%" y="127.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="81.7043%" y="101" width="0.2506%" height="15" fill="rgb(221,106,17)" fg:x="326" fg:w="1"/><text x="81.9543%" y="111.50"></text></g><g><title>&lt;tokio::sync::batch_semaphore::Acquire as core::future::future::Future&gt;::poll (2 samples, 0.50%)</title><rect x="81.7043%" y="293" width="0.5013%" height="15" fill="rgb(251,142,44)" fg:x="326" fg:w="2"/><text x="81.9543%" y="303.50"></text></g><g><title>tracing_core::event::Event::dispatch (1 samples, 0.25%)</title><rect x="81.9549%" y="277" width="0.2506%" height="15" fill="rgb(238,13,15)" fg:x="327" fg:w="1"/><text x="82.2049%" y="287.50"></text></g><g><title>tracing_core::dispatcher::get_default (1 samples, 0.25%)</title><rect x="81.9549%" y="261" width="0.2506%" height="15" fill="rgb(208,107,27)" fg:x="327" fg:w="1"/><text x="82.2049%" y="271.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::event (1 samples, 0.25%)</title><rect x="81.9549%" y="245" width="0.2506%" height="15" fill="rgb(205,136,37)" fg:x="327" fg:w="1"/><text x="82.2049%" y="255.50"></text></g><g><title>&lt;console_subscriber::ConsoleLayer as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_event (1 samples, 0.25%)</title><rect x="81.9549%" y="229" width="0.2506%" height="15" fill="rgb(250,205,27)" fg:x="327" fg:w="1"/><text x="82.2049%" y="239.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Data as tracing_subscriber::registry::SpanData&gt;::metadata (1 samples, 0.25%)</title><rect x="81.9549%" y="213" width="0.2506%" height="15" fill="rgb(210,80,43)" fg:x="327" fg:w="1"/><text x="82.2049%" y="223.50"></text></g><g><title>tokio::sync::mpsc::bounded::Sender&lt;T&gt;::send::{{closure}} (3 samples, 0.75%)</title><rect x="81.7043%" y="309" width="0.7519%" height="15" fill="rgb(247,160,36)" fg:x="326" fg:w="3"/><text x="81.9543%" y="319.50"></text></g><g><title>tokio::sync::batch_semaphore::Semaphore::acquire (1 samples, 0.25%)</title><rect x="82.2055%" y="293" width="0.2506%" height="15" fill="rgb(234,13,49)" fg:x="328" fg:w="1"/><text x="82.4555%" y="303.50"></text></g><g><title>tracing::span::Span::in_scope (1 samples, 0.25%)</title><rect x="82.2055%" y="277" width="0.2506%" height="15" fill="rgb(234,122,0)" fg:x="328" fg:w="1"/><text x="82.4555%" y="287.50"></text></g><g><title>tracing::__macro_support::__is_enabled (1 samples, 0.25%)</title><rect x="82.2055%" y="261" width="0.2506%" height="15" fill="rgb(207,146,38)" fg:x="328" fg:w="1"/><text x="82.4555%" y="271.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::exit (1 samples, 0.25%)</title><rect x="82.4561%" y="245" width="0.2506%" height="15" fill="rgb(207,177,25)" fg:x="329" fg:w="1"/><text x="82.7061%" y="255.50"></text></g><g><title>&lt;console_subscriber::ConsoleLayer as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_exit (1 samples, 0.25%)</title><rect x="82.4561%" y="229" width="0.2506%" height="15" fill="rgb(211,178,42)" fg:x="329" fg:w="1"/><text x="82.7061%" y="239.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_subscriber::registry::LookupSpan&gt;::span_data (1 samples, 0.25%)</title><rect x="82.4561%" y="213" width="0.2506%" height="15" fill="rgb(230,69,54)" fg:x="329" fg:w="1"/><text x="82.7061%" y="223.50"></text></g><g><title>&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (23 samples, 5.76%)</title><rect x="77.4436%" y="341" width="5.7644%" height="15" fill="rgb(214,135,41)" fg:x="309" fg:w="23"/><text x="77.6936%" y="351.50">&lt;tracin..</text></g><g><title>bittorrent_rust::peer::Peer::run::{{closure}} (22 samples, 5.51%)</title><rect x="77.6942%" y="325" width="5.5138%" height="15" fill="rgb(237,67,25)" fg:x="310" fg:w="22"/><text x="77.9442%" y="335.50">bittorr..</text></g><g><title>tokio::sync::rwlock::RwLock&lt;T&gt;::read::{{closure}} (3 samples, 0.75%)</title><rect x="82.4561%" y="309" width="0.7519%" height="15" fill="rgb(222,189,50)" fg:x="329" fg:w="3"/><text x="82.7061%" y="319.50"></text></g><g><title>&lt;tokio::util::trace::InstrumentedAsyncOp&lt;F&gt; as core::future::future::Future&gt;::poll (3 samples, 0.75%)</title><rect x="82.4561%" y="293" width="0.7519%" height="15" fill="rgb(245,148,34)" fg:x="329" fg:w="3"/><text x="82.7061%" y="303.50"></text></g><g><title>&lt;tokio::sync::batch_semaphore::Acquire as core::future::future::Future&gt;::poll (3 samples, 0.75%)</title><rect x="82.4561%" y="277" width="0.7519%" height="15" fill="rgb(222,29,6)" fg:x="329" fg:w="3"/><text x="82.7061%" y="287.50"></text></g><g><title>tracing::span::Span::in_scope (3 samples, 0.75%)</title><rect x="82.4561%" y="261" width="0.7519%" height="15" fill="rgb(221,189,43)" fg:x="329" fg:w="3"/><text x="82.7061%" y="271.50"></text></g><g><title>tracing_core::event::Event::dispatch (2 samples, 0.50%)</title><rect x="82.7068%" y="245" width="0.5013%" height="15" fill="rgb(207,36,27)" fg:x="330" fg:w="2"/><text x="82.9568%" y="255.50"></text></g><g><title>tracing_core::dispatcher::get_default (2 samples, 0.50%)</title><rect x="82.7068%" y="229" width="0.5013%" height="15" fill="rgb(217,90,24)" fg:x="330" fg:w="2"/><text x="82.9568%" y="239.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::event (2 samples, 0.50%)</title><rect x="82.7068%" y="213" width="0.5013%" height="15" fill="rgb(224,66,35)" fg:x="330" fg:w="2"/><text x="82.9568%" y="223.50"></text></g><g><title>&lt;console_subscriber::ConsoleLayer as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_event (2 samples, 0.50%)</title><rect x="82.7068%" y="197" width="0.5013%" height="15" fill="rgb(221,13,50)" fg:x="330" fg:w="2"/><text x="82.9568%" y="207.50"></text></g><g><title>console_subscriber::stats::ResourceStats::update_attribute (1 samples, 0.25%)</title><rect x="82.9574%" y="181" width="0.2506%" height="15" fill="rgb(236,68,49)" fg:x="331" fg:w="1"/><text x="83.2074%" y="191.50"></text></g><g><title>console_subscriber::attribute::Attributes::update (1 samples, 0.25%)</title><rect x="82.9574%" y="165" width="0.2506%" height="15" fill="rgb(229,146,28)" fg:x="331" fg:w="1"/><text x="83.2074%" y="175.50"></text></g><g><title>[libc.so.6] (1 samples, 0.25%)</title><rect x="82.9574%" y="149" width="0.2506%" height="15" fill="rgb(225,31,38)" fg:x="331" fg:w="1"/><text x="83.2074%" y="159.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::exit (2 samples, 0.50%)</title><rect x="83.2080%" y="341" width="0.5013%" height="15" fill="rgb(250,208,3)" fg:x="332" fg:w="2"/><text x="83.4580%" y="351.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::exit (2 samples, 0.50%)</title><rect x="83.2080%" y="325" width="0.5013%" height="15" fill="rgb(246,54,23)" fg:x="332" fg:w="2"/><text x="83.4580%" y="335.50"></text></g><g><title>tracing_core::dispatcher::get_default (1 samples, 0.25%)</title><rect x="83.4586%" y="309" width="0.2506%" height="15" fill="rgb(243,76,11)" fg:x="333" fg:w="1"/><text x="83.7086%" y="319.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (1 samples, 0.25%)</title><rect x="83.4586%" y="293" width="0.2506%" height="15" fill="rgb(245,21,50)" fg:x="333" fg:w="1"/><text x="83.7086%" y="303.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (1 samples, 0.25%)</title><rect x="83.4586%" y="277" width="0.2506%" height="15" fill="rgb(228,9,43)" fg:x="333" fg:w="1"/><text x="83.7086%" y="287.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::try_close (1 samples, 0.25%)</title><rect x="83.4586%" y="261" width="0.2506%" height="15" fill="rgb(208,100,47)" fg:x="333" fg:w="1"/><text x="83.7086%" y="271.50"></text></g><g><title>&lt;tokio::time::timeout::Timeout&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.25%)</title><rect x="83.7093%" y="325" width="0.2506%" height="15" fill="rgb(232,26,8)" fg:x="334" fg:w="1"/><text x="83.9593%" y="335.50"></text></g><g><title>&lt;tokio::time::sleep::Sleep as core::future::future::Future&gt;::poll (1 samples, 0.25%)</title><rect x="83.7093%" y="309" width="0.2506%" height="15" fill="rgb(216,166,38)" fg:x="334" fg:w="1"/><text x="83.9593%" y="319.50"></text></g><g><title>tracing_core::event::Event::dispatch (1 samples, 0.25%)</title><rect x="83.7093%" y="293" width="0.2506%" height="15" fill="rgb(251,202,51)" fg:x="334" fg:w="1"/><text x="83.9593%" y="303.50"></text></g><g><title>tracing_core::dispatcher::get_default (1 samples, 0.25%)</title><rect x="83.7093%" y="277" width="0.2506%" height="15" fill="rgb(254,216,34)" fg:x="334" fg:w="1"/><text x="83.9593%" y="287.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::event (1 samples, 0.25%)</title><rect x="83.7093%" y="261" width="0.2506%" height="15" fill="rgb(251,32,27)" fg:x="334" fg:w="1"/><text x="83.9593%" y="271.50"></text></g><g><title>&lt;console_subscriber::ConsoleLayer as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_event (1 samples, 0.25%)</title><rect x="83.7093%" y="245" width="0.2506%" height="15" fill="rgb(208,127,28)" fg:x="334" fg:w="1"/><text x="83.9593%" y="255.50"></text></g><g><title>tracing_core::field::ValueSet::record (1 samples, 0.25%)</title><rect x="83.7093%" y="229" width="0.2506%" height="15" fill="rgb(224,137,22)" fg:x="334" fg:w="1"/><text x="83.9593%" y="239.50"></text></g><g><title>&lt;console_subscriber::visitors::PollOpVisitor as tracing_core::field::Visit&gt;::record_str (1 samples, 0.25%)</title><rect x="83.7093%" y="213" width="0.2506%" height="15" fill="rgb(254,70,32)" fg:x="334" fg:w="1"/><text x="83.9593%" y="223.50"></text></g><g><title>malloc (1 samples, 0.25%)</title><rect x="83.7093%" y="197" width="0.2506%" height="15" fill="rgb(229,75,37)" fg:x="334" fg:w="1"/><text x="83.9593%" y="207.50"></text></g><g><title>bittorrent_rust::tracker::connect::Request::new (1 samples, 0.25%)</title><rect x="83.9599%" y="325" width="0.2506%" height="15" fill="rgb(252,64,23)" fg:x="335" fg:w="1"/><text x="84.2099%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="84.4612%" y="245" width="0.2506%" height="15" fill="rgb(232,162,48)" fg:x="337" fg:w="1"/><text x="84.7112%" y="255.50"></text></g><g><title>std::sys::unix::futex::futex_wait (2 samples, 0.50%)</title><rect x="84.7118%" y="229" width="0.5013%" height="15" fill="rgb(246,160,12)" fg:x="338" fg:w="2"/><text x="84.9618%" y="239.50"></text></g><g><title>syscall (2 samples, 0.50%)</title><rect x="84.7118%" y="213" width="0.5013%" height="15" fill="rgb(247,166,0)" fg:x="338" fg:w="2"/><text x="84.9618%" y="223.50"></text></g><g><title>[unknown] (2 samples, 0.50%)</title><rect x="84.7118%" y="197" width="0.5013%" height="15" fill="rgb(249,219,21)" fg:x="338" fg:w="2"/><text x="84.9618%" y="207.50"></text></g><g><title>[unknown] (2 samples, 0.50%)</title><rect x="84.7118%" y="181" width="0.5013%" height="15" fill="rgb(205,209,3)" fg:x="338" fg:w="2"/><text x="84.9618%" y="191.50"></text></g><g><title>[unknown] (2 samples, 0.50%)</title><rect x="84.7118%" y="165" width="0.5013%" height="15" fill="rgb(243,44,1)" fg:x="338" fg:w="2"/><text x="84.9618%" y="175.50"></text></g><g><title>[unknown] (2 samples, 0.50%)</title><rect x="84.7118%" y="149" width="0.5013%" height="15" fill="rgb(206,159,16)" fg:x="338" fg:w="2"/><text x="84.9618%" y="159.50"></text></g><g><title>[unknown] (2 samples, 0.50%)</title><rect x="84.7118%" y="133" width="0.5013%" height="15" fill="rgb(244,77,30)" fg:x="338" fg:w="2"/><text x="84.9618%" y="143.50"></text></g><g><title>[unknown] (2 samples, 0.50%)</title><rect x="84.7118%" y="117" width="0.5013%" height="15" fill="rgb(218,69,12)" fg:x="338" fg:w="2"/><text x="84.9618%" y="127.50"></text></g><g><title>[unknown] (2 samples, 0.50%)</title><rect x="84.7118%" y="101" width="0.5013%" height="15" fill="rgb(212,87,7)" fg:x="338" fg:w="2"/><text x="84.9618%" y="111.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock_contended (3 samples, 0.75%)</title><rect x="84.7118%" y="245" width="0.7519%" height="15" fill="rgb(245,114,25)" fg:x="338" fg:w="3"/><text x="84.9618%" y="255.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::spin (1 samples, 0.25%)</title><rect x="85.2130%" y="229" width="0.2506%" height="15" fill="rgb(210,61,42)" fg:x="340" fg:w="1"/><text x="85.4630%" y="239.50"></text></g><g><title>&lt;T as alloc::ffi::c_str::CString::new::SpecNewImpl&gt;::spec_new_impl (1 samples, 0.25%)</title><rect x="85.4637%" y="229" width="0.2506%" height="15" fill="rgb(211,52,33)" fg:x="341" fg:w="1"/><text x="85.7137%" y="239.50"></text></g><g><title>alloc::ffi::c_str::CString::_from_vec_unchecked (1 samples, 0.25%)</title><rect x="85.4637%" y="213" width="0.2506%" height="15" fill="rgb(234,58,33)" fg:x="341" fg:w="1"/><text x="85.7137%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve_exact (1 samples, 0.25%)</title><rect x="85.4637%" y="197" width="0.2506%" height="15" fill="rgb(220,115,36)" fg:x="341" fg:w="1"/><text x="85.7137%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_exact (1 samples, 0.25%)</title><rect x="85.4637%" y="181" width="0.2506%" height="15" fill="rgb(243,153,54)" fg:x="341" fg:w="1"/><text x="85.7137%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve_exact (1 samples, 0.25%)</title><rect x="85.4637%" y="165" width="0.2506%" height="15" fill="rgb(251,47,18)" fg:x="341" fg:w="1"/><text x="85.7137%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_exact (1 samples, 0.25%)</title><rect x="85.4637%" y="149" width="0.2506%" height="15" fill="rgb(242,102,42)" fg:x="341" fg:w="1"/><text x="85.7137%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.25%)</title><rect x="85.4637%" y="133" width="0.2506%" height="15" fill="rgb(234,31,38)" fg:x="341" fg:w="1"/><text x="85.7137%" y="143.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="85.7143%" y="197" width="0.2506%" height="15" fill="rgb(221,117,51)" fg:x="342" fg:w="1"/><text x="85.9643%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="85.7143%" y="181" width="0.2506%" height="15" fill="rgb(212,20,18)" fg:x="342" fg:w="1"/><text x="85.9643%" y="191.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="85.7143%" y="165" width="0.2506%" height="15" fill="rgb(245,133,36)" fg:x="342" fg:w="1"/><text x="85.9643%" y="175.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="85.7143%" y="149" width="0.2506%" height="15" fill="rgb(212,6,19)" fg:x="342" fg:w="1"/><text x="85.9643%" y="159.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="85.7143%" y="133" width="0.2506%" height="15" fill="rgb(218,1,36)" fg:x="342" fg:w="1"/><text x="85.9643%" y="143.50"></text></g><g><title>std::thread::Builder::spawn_unchecked (5 samples, 1.25%)</title><rect x="85.4637%" y="245" width="1.2531%" height="15" fill="rgb(246,84,54)" fg:x="341" fg:w="5"/><text x="85.7137%" y="255.50"></text></g><g><title>std::sys::unix::thread::Thread::new (4 samples, 1.00%)</title><rect x="85.7143%" y="229" width="1.0025%" height="15" fill="rgb(242,110,6)" fg:x="342" fg:w="4"/><text x="85.9643%" y="239.50"></text></g><g><title>pthread_create (4 samples, 1.00%)</title><rect x="85.7143%" y="213" width="1.0025%" height="15" fill="rgb(214,47,5)" fg:x="342" fg:w="4"/><text x="85.9643%" y="223.50"></text></g><g><title>_dl_allocate_tls_init (3 samples, 0.75%)</title><rect x="85.9649%" y="197" width="0.7519%" height="15" fill="rgb(218,159,25)" fg:x="343" fg:w="3"/><text x="86.2149%" y="207.50"></text></g><g><title>[ld-linux-x86-64.so.2] (3 samples, 0.75%)</title><rect x="85.9649%" y="181" width="0.7519%" height="15" fill="rgb(215,211,28)" fg:x="343" fg:w="3"/><text x="86.2149%" y="191.50"></text></g><g><title>[unknown] (2 samples, 0.50%)</title><rect x="86.2155%" y="165" width="0.5013%" height="15" fill="rgb(238,59,32)" fg:x="344" fg:w="2"/><text x="86.4655%" y="175.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="86.4662%" y="149" width="0.2506%" height="15" fill="rgb(226,82,3)" fg:x="345" fg:w="1"/><text x="86.7162%" y="159.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="86.4662%" y="133" width="0.2506%" height="15" fill="rgb(240,164,32)" fg:x="345" fg:w="1"/><text x="86.7162%" y="143.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="86.4662%" y="117" width="0.2506%" height="15" fill="rgb(232,46,7)" fg:x="345" fg:w="1"/><text x="86.7162%" y="127.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_task (11 samples, 2.76%)</title><rect x="84.2105%" y="261" width="2.7569%" height="15" fill="rgb(229,129,53)" fg:x="336" fg:w="11"/><text x="84.4605%" y="271.50">to..</text></g><g><title>tokio::runtime::builder::Builder::new::{{closure}} (1 samples, 0.25%)</title><rect x="86.7168%" y="245" width="0.2506%" height="15" fill="rgb(234,188,29)" fg:x="346" fg:w="1"/><text x="86.9668%" y="255.50"></text></g><g><title>__rdl_alloc (1 samples, 0.25%)</title><rect x="86.7168%" y="229" width="0.2506%" height="15" fill="rgb(246,141,4)" fg:x="346" fg:w="1"/><text x="86.9668%" y="239.50"></text></g><g><title>tracing::__macro_support::__is_enabled (1 samples, 0.25%)</title><rect x="86.9674%" y="261" width="0.2506%" height="15" fill="rgb(229,23,39)" fg:x="347" fg:w="1"/><text x="87.2174%" y="271.50"></text></g><g><title>std::sys::common::thread_local::fast_local::Key&lt;T&gt;::try_initialize (1 samples, 0.25%)</title><rect x="86.9674%" y="245" width="0.2506%" height="15" fill="rgb(206,12,3)" fg:x="347" fg:w="1"/><text x="87.2174%" y="255.50"></text></g><g><title>__cxa_thread_atexit_impl (1 samples, 0.25%)</title><rect x="86.9674%" y="229" width="0.2506%" height="15" fill="rgb(252,226,20)" fg:x="347" fg:w="1"/><text x="87.2174%" y="239.50"></text></g><g><title>__libc_calloc (1 samples, 0.25%)</title><rect x="86.9674%" y="213" width="0.2506%" height="15" fill="rgb(216,123,35)" fg:x="347" fg:w="1"/><text x="87.2174%" y="223.50"></text></g><g><title>[libc.so.6] (1 samples, 0.25%)</title><rect x="86.9674%" y="197" width="0.2506%" height="15" fill="rgb(212,68,40)" fg:x="347" fg:w="1"/><text x="87.2174%" y="207.50"></text></g><g><title>[libc.so.6] (4 samples, 1.00%)</title><rect x="87.4687%" y="181" width="1.0025%" height="15" fill="rgb(254,125,32)" fg:x="349" fg:w="4"/><text x="87.7187%" y="191.50"></text></g><g><title>[unknown] (4 samples, 1.00%)</title><rect x="87.4687%" y="165" width="1.0025%" height="15" fill="rgb(253,97,22)" fg:x="349" fg:w="4"/><text x="87.7187%" y="175.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="88.2206%" y="149" width="0.2506%" height="15" fill="rgb(241,101,14)" fg:x="352" fg:w="1"/><text x="88.4706%" y="159.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="88.2206%" y="133" width="0.2506%" height="15" fill="rgb(238,103,29)" fg:x="352" fg:w="1"/><text x="88.4706%" y="143.50"></text></g><g><title>tokio::net::addr::&lt;impl tokio::net::addr::sealed::ToSocketAddrsPriv for alloc::string::String&gt;::to_socket_addrs (19 samples, 4.76%)</title><rect x="84.2105%" y="325" width="4.7619%" height="15" fill="rgb(233,195,47)" fg:x="336" fg:w="19"/><text x="84.4605%" y="335.50">tokio:..</text></g><g><title>tokio::net::addr::&lt;impl tokio::net::addr::sealed::ToSocketAddrsPriv for str&gt;::to_socket_addrs (19 samples, 4.76%)</title><rect x="84.2105%" y="309" width="4.7619%" height="15" fill="rgb(246,218,30)" fg:x="336" fg:w="19"/><text x="84.4605%" y="319.50">tokio:..</text></g><g><title>tokio::runtime::blocking::pool::spawn_blocking (19 samples, 4.76%)</title><rect x="84.2105%" y="293" width="4.7619%" height="15" fill="rgb(219,145,47)" fg:x="336" fg:w="19"/><text x="84.4605%" y="303.50">tokio:..</text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_blocking (19 samples, 4.76%)</title><rect x="84.2105%" y="277" width="4.7619%" height="15" fill="rgb(243,12,26)" fg:x="336" fg:w="19"/><text x="84.4605%" y="287.50">tokio:..</text></g><g><title>tracing::span::Span::new (7 samples, 1.75%)</title><rect x="87.2180%" y="261" width="1.7544%" height="15" fill="rgb(214,87,16)" fg:x="348" fg:w="7"/><text x="87.4680%" y="271.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (7 samples, 1.75%)</title><rect x="87.2180%" y="245" width="1.7544%" height="15" fill="rgb(208,99,42)" fg:x="348" fg:w="7"/><text x="87.4680%" y="255.50"></text></g><g><title>&lt;console_subscriber::ConsoleLayer as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_new_span (7 samples, 1.75%)</title><rect x="87.2180%" y="229" width="1.7544%" height="15" fill="rgb(253,99,2)" fg:x="348" fg:w="7"/><text x="87.4680%" y="239.50"></text></g><g><title>console_subscriber::stats::TaskStats::new (7 samples, 1.75%)</title><rect x="87.2180%" y="213" width="1.7544%" height="15" fill="rgb(220,168,23)" fg:x="348" fg:w="7"/><text x="87.4680%" y="223.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::new_with_bounds (6 samples, 1.50%)</title><rect x="87.4687%" y="197" width="1.5038%" height="15" fill="rgb(242,38,24)" fg:x="349" fg:w="6"/><text x="87.7187%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.50%)</title><rect x="88.4712%" y="181" width="0.5013%" height="15" fill="rgb(225,182,9)" fg:x="353" fg:w="2"/><text x="88.7212%" y="191.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="88.7218%" y="165" width="0.2506%" height="15" fill="rgb(243,178,37)" fg:x="354" fg:w="1"/><text x="88.9718%" y="175.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (130 samples, 32.58%)</title><rect x="56.6416%" y="501" width="32.5815%" height="15" fill="rgb(232,139,19)" fg:x="226" fg:w="130"/><text x="56.8916%" y="511.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (130 samples, 32.58%)</title><rect x="56.6416%" y="485" width="32.5815%" height="15" fill="rgb(225,201,24)" fg:x="226" fg:w="130"/><text x="56.8916%" y="495.50">tokio::runtime::task::core::Core&lt;T,S&gt;::poll</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (130 samples, 32.58%)</title><rect x="56.6416%" y="469" width="32.5815%" height="15" fill="rgb(221,47,46)" fg:x="226" fg:w="130"/><text x="56.8916%" y="479.50">tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run (107 samples, 26.82%)</title><rect x="62.4060%" y="453" width="26.8170%" height="15" fill="rgb(249,23,13)" fg:x="249" fg:w="107"/><text x="62.6560%" y="463.50">tokio::runtime::scheduler::multi_thread::wo..</text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (106 samples, 26.57%)</title><rect x="62.6566%" y="437" width="26.5664%" height="15" fill="rgb(219,9,5)" fg:x="250" fg:w="106"/><text x="62.9066%" y="447.50">tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run (106 samples, 26.57%)</title><rect x="62.6566%" y="421" width="26.5664%" height="15" fill="rgb(254,171,16)" fg:x="250" fg:w="106"/><text x="62.9066%" y="431.50">tokio::runtime::scheduler::multi_thread::wo..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task (51 samples, 12.78%)</title><rect x="76.4411%" y="405" width="12.7820%" height="15" fill="rgb(230,171,20)" fg:x="305" fg:w="51"/><text x="76.6911%" y="415.50">tokio::runtime::sch..</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (48 samples, 12.03%)</title><rect x="77.1930%" y="389" width="12.0301%" height="15" fill="rgb(210,71,41)" fg:x="308" fg:w="48"/><text x="77.4430%" y="399.50">tokio::runtime::ta..</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (48 samples, 12.03%)</title><rect x="77.1930%" y="373" width="12.0301%" height="15" fill="rgb(206,173,20)" fg:x="308" fg:w="48"/><text x="77.4430%" y="383.50">tokio::runtime::ta..</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (48 samples, 12.03%)</title><rect x="77.1930%" y="357" width="12.0301%" height="15" fill="rgb(233,88,34)" fg:x="308" fg:w="48"/><text x="77.4430%" y="367.50">tokio::loom::std::..</text></g><g><title>bittorrent_rust::tracker::tracker::Tracker::connect::{{closure}}::{{closure}} (22 samples, 5.51%)</title><rect x="83.7093%" y="341" width="5.5138%" height="15" fill="rgb(223,209,46)" fg:x="334" fg:w="22"/><text x="83.9593%" y="351.50">bittorr..</text></g><g><title>tokio::net::udp::UdpSocket::bind_addr (1 samples, 0.25%)</title><rect x="88.9724%" y="325" width="0.2506%" height="15" fill="rgb(250,43,18)" fg:x="355" fg:w="1"/><text x="89.2224%" y="335.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::new (1 samples, 0.25%)</title><rect x="88.9724%" y="309" width="0.2506%" height="15" fill="rgb(208,13,10)" fg:x="355" fg:w="1"/><text x="89.2224%" y="319.50"></text></g><g><title>tokio::runtime::io::registration::Registration::new_with_interest_and_handle (1 samples, 0.25%)</title><rect x="88.9724%" y="293" width="0.2506%" height="15" fill="rgb(212,200,36)" fg:x="355" fg:w="1"/><text x="89.2224%" y="303.50"></text></g><g><title>tokio::runtime::io::Handle::add_source (1 samples, 0.25%)</title><rect x="88.9724%" y="277" width="0.2506%" height="15" fill="rgb(225,90,30)" fg:x="355" fg:w="1"/><text x="89.2224%" y="287.50"></text></g><g><title>tokio::runtime::io::Handle::allocate (1 samples, 0.25%)</title><rect x="88.9724%" y="261" width="0.2506%" height="15" fill="rgb(236,182,39)" fg:x="355" fg:w="1"/><text x="89.2224%" y="271.50"></text></g><g><title>tokio::util::slab::Allocator&lt;T&gt;::allocate (1 samples, 0.25%)</title><rect x="88.9724%" y="245" width="0.2506%" height="15" fill="rgb(212,144,35)" fg:x="355" fg:w="1"/><text x="89.2224%" y="255.50"></text></g><g><title>tokio::runtime::blocking::pool::Inner::run (152 samples, 38.10%)</title><rect x="51.3784%" y="517" width="38.0952%" height="15" fill="rgb(228,63,44)" fg:x="205" fg:w="152"/><text x="51.6284%" y="527.50">tokio::runtime::blocking::pool::Inner::run</text></g><g><title>tokio::runtime::task::raw::poll (1 samples, 0.25%)</title><rect x="89.2231%" y="501" width="0.2506%" height="15" fill="rgb(228,109,6)" fg:x="356" fg:w="1"/><text x="89.4731%" y="511.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (158 samples, 39.60%)</title><rect x="50.1253%" y="533" width="39.5990%" height="15" fill="rgb(238,117,24)" fg:x="200" fg:w="158"/><text x="50.3753%" y="543.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>tokio::runtime::context::Context::set_current (1 samples, 0.25%)</title><rect x="89.4737%" y="517" width="0.2506%" height="15" fill="rgb(242,26,26)" fg:x="357" fg:w="1"/><text x="89.7237%" y="527.50"></text></g><g><title>tokio::util::rand::RngSeedGenerator::next_seed (1 samples, 0.25%)</title><rect x="89.4737%" y="501" width="0.2506%" height="15" fill="rgb(221,92,48)" fg:x="357" fg:w="1"/><text x="89.7237%" y="511.50"></text></g><g><title>[libc.so.6] (2 samples, 0.50%)</title><rect x="89.7243%" y="437" width="0.5013%" height="15" fill="rgb(209,209,32)" fg:x="358" fg:w="2"/><text x="89.9743%" y="447.50"></text></g><g><title>[libc.so.6] (2 samples, 0.50%)</title><rect x="89.7243%" y="421" width="0.5013%" height="15" fill="rgb(221,70,22)" fg:x="358" fg:w="2"/><text x="89.9743%" y="431.50"></text></g><g><title>[unknown] (2 samples, 0.50%)</title><rect x="89.7243%" y="405" width="0.5013%" height="15" fill="rgb(248,145,5)" fg:x="358" fg:w="2"/><text x="89.9743%" y="415.50"></text></g><g><title>[unknown] (2 samples, 0.50%)</title><rect x="89.7243%" y="389" width="0.5013%" height="15" fill="rgb(226,116,26)" fg:x="358" fg:w="2"/><text x="89.9743%" y="399.50"></text></g><g><title>[unknown] (2 samples, 0.50%)</title><rect x="89.7243%" y="373" width="0.5013%" height="15" fill="rgb(244,5,17)" fg:x="358" fg:w="2"/><text x="89.9743%" y="383.50"></text></g><g><title>[unknown] (2 samples, 0.50%)</title><rect x="89.7243%" y="357" width="0.5013%" height="15" fill="rgb(252,159,33)" fg:x="358" fg:w="2"/><text x="89.9743%" y="367.50"></text></g><g><title>[unknown] (2 samples, 0.50%)</title><rect x="89.7243%" y="341" width="0.5013%" height="15" fill="rgb(206,71,0)" fg:x="358" fg:w="2"/><text x="89.9743%" y="351.50"></text></g><g><title>_dl_find_dso_for_object (1 samples, 0.25%)</title><rect x="90.2256%" y="437" width="0.2506%" height="15" fill="rgb(233,118,54)" fg:x="360" fg:w="1"/><text x="90.4756%" y="447.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (174 samples, 43.61%)</title><rect x="47.1178%" y="581" width="43.6090%" height="15" fill="rgb(234,83,48)" fg:x="188" fg:w="174"/><text x="47.3678%" y="591.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (173 samples, 43.36%)</title><rect x="47.3684%" y="565" width="43.3584%" height="15" fill="rgb(228,3,54)" fg:x="189" fg:w="173"/><text x="47.6184%" y="575.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (173 samples, 43.36%)</title><rect x="47.3684%" y="549" width="43.3584%" height="15" fill="rgb(226,155,13)" fg:x="189" fg:w="173"/><text x="47.6184%" y="559.50">core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>std::sys_common::thread_info::set (4 samples, 1.00%)</title><rect x="89.7243%" y="533" width="1.0025%" height="15" fill="rgb(241,28,37)" fg:x="358" fg:w="4"/><text x="89.9743%" y="543.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (4 samples, 1.00%)</title><rect x="89.7243%" y="517" width="1.0025%" height="15" fill="rgb(233,93,10)" fg:x="358" fg:w="4"/><text x="89.9743%" y="527.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (4 samples, 1.00%)</title><rect x="89.7243%" y="501" width="1.0025%" height="15" fill="rgb(225,113,19)" fg:x="358" fg:w="4"/><text x="89.9743%" y="511.50"></text></g><g><title>std::sys_common::thread_info::THREAD_INFO::__getit (4 samples, 1.00%)</title><rect x="89.7243%" y="485" width="1.0025%" height="15" fill="rgb(241,2,18)" fg:x="358" fg:w="4"/><text x="89.9743%" y="495.50"></text></g><g><title>std::sys::common::thread_local::fast_local::Key&lt;T&gt;::register_dtor (4 samples, 1.00%)</title><rect x="89.7243%" y="469" width="1.0025%" height="15" fill="rgb(228,207,21)" fg:x="358" fg:w="4"/><text x="89.9743%" y="479.50"></text></g><g><title>__cxa_thread_atexit_impl (4 samples, 1.00%)</title><rect x="89.7243%" y="453" width="1.0025%" height="15" fill="rgb(213,211,35)" fg:x="358" fg:w="4"/><text x="89.9743%" y="463.50"></text></g><g><title>pthread_mutex_lock (1 samples, 0.25%)</title><rect x="90.4762%" y="437" width="0.2506%" height="15" fill="rgb(209,83,10)" fg:x="361" fg:w="1"/><text x="90.7262%" y="447.50"></text></g><g><title>[libc.so.6] (1 samples, 0.25%)</title><rect x="90.4762%" y="421" width="0.2506%" height="15" fill="rgb(209,164,1)" fg:x="361" fg:w="1"/><text x="90.7262%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="90.4762%" y="405" width="0.2506%" height="15" fill="rgb(213,184,43)" fg:x="361" fg:w="1"/><text x="90.7262%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="90.4762%" y="389" width="0.2506%" height="15" fill="rgb(231,61,34)" fg:x="361" fg:w="1"/><text x="90.7262%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="90.4762%" y="373" width="0.2506%" height="15" fill="rgb(235,75,3)" fg:x="361" fg:w="1"/><text x="90.7262%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="90.4762%" y="357" width="0.2506%" height="15" fill="rgb(220,106,47)" fg:x="361" fg:w="1"/><text x="90.7262%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="90.4762%" y="341" width="0.2506%" height="15" fill="rgb(210,196,33)" fg:x="361" fg:w="1"/><text x="90.7262%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="90.4762%" y="325" width="0.2506%" height="15" fill="rgb(229,154,42)" fg:x="361" fg:w="1"/><text x="90.7262%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="90.4762%" y="309" width="0.2506%" height="15" fill="rgb(228,114,26)" fg:x="361" fg:w="1"/><text x="90.7262%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="90.4762%" y="293" width="0.2506%" height="15" fill="rgb(208,144,1)" fg:x="361" fg:w="1"/><text x="90.7262%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="90.4762%" y="277" width="0.2506%" height="15" fill="rgb(239,112,37)" fg:x="361" fg:w="1"/><text x="90.7262%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys::unix::stack_overflow::Handler&gt; (1 samples, 0.25%)</title><rect x="90.7268%" y="581" width="0.2506%" height="15" fill="rgb(210,96,50)" fg:x="362" fg:w="1"/><text x="90.9768%" y="591.50"></text></g><g><title>&lt;std::sys::unix::stack_overflow::Handler as core::ops::drop::Drop&gt;::drop (1 samples, 0.25%)</title><rect x="90.7268%" y="565" width="0.2506%" height="15" fill="rgb(222,178,2)" fg:x="362" fg:w="1"/><text x="90.9768%" y="575.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::drop_handler (1 samples, 0.25%)</title><rect x="90.7268%" y="549" width="0.2506%" height="15" fill="rgb(226,74,18)" fg:x="362" fg:w="1"/><text x="90.9768%" y="559.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (1 samples, 0.25%)</title><rect x="90.7268%" y="533" width="0.2506%" height="15" fill="rgb(225,67,54)" fg:x="362" fg:w="1"/><text x="90.9768%" y="543.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1 samples, 0.25%)</title><rect x="90.7268%" y="517" width="0.2506%" height="15" fill="rgb(251,92,32)" fg:x="362" fg:w="1"/><text x="90.9768%" y="527.50"></text></g><g><title>tokio::runtime::blocking::pool::Inner::run (1 samples, 0.25%)</title><rect x="90.7268%" y="501" width="0.2506%" height="15" fill="rgb(228,149,22)" fg:x="362" fg:w="1"/><text x="90.9768%" y="511.50"></text></g><g><title>std::sys::unix::locks::futex_condvar::Condvar::wait_timeout (1 samples, 0.25%)</title><rect x="90.7268%" y="485" width="0.2506%" height="15" fill="rgb(243,54,13)" fg:x="362" fg:w="1"/><text x="90.9768%" y="495.50"></text></g><g><title>std::sys::unix::locks::futex_condvar::Condvar::wait_optional_timeout (1 samples, 0.25%)</title><rect x="90.7268%" y="469" width="0.2506%" height="15" fill="rgb(243,180,28)" fg:x="362" fg:w="1"/><text x="90.9768%" y="479.50"></text></g><g><title>std::sys::unix::futex::futex_wait (1 samples, 0.25%)</title><rect x="90.7268%" y="453" width="0.2506%" height="15" fill="rgb(208,167,24)" fg:x="362" fg:w="1"/><text x="90.9768%" y="463.50"></text></g><g><title>core::bool::&lt;impl bool&gt;::then (1 samples, 0.25%)</title><rect x="90.7268%" y="437" width="0.2506%" height="15" fill="rgb(245,73,45)" fg:x="362" fg:w="1"/><text x="90.9768%" y="447.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.25%)</title><rect x="90.7268%" y="421" width="0.2506%" height="15" fill="rgb(237,203,48)" fg:x="362" fg:w="1"/><text x="90.9768%" y="431.50"></text></g><g><title>std::sys::unix::os::errno (1 samples, 0.25%)</title><rect x="90.7268%" y="405" width="0.2506%" height="15" fill="rgb(211,197,16)" fg:x="362" fg:w="1"/><text x="90.9768%" y="415.50"></text></g><g><title>syscall (1 samples, 0.25%)</title><rect x="90.7268%" y="389" width="0.2506%" height="15" fill="rgb(243,99,51)" fg:x="362" fg:w="1"/><text x="90.9768%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="90.7268%" y="373" width="0.2506%" height="15" fill="rgb(215,123,29)" fg:x="362" fg:w="1"/><text x="90.9768%" y="383.50"></text></g><g><title>sigaltstack (2 samples, 0.50%)</title><rect x="90.9774%" y="549" width="0.5013%" height="15" fill="rgb(239,186,37)" fg:x="363" fg:w="2"/><text x="91.2274%" y="559.50"></text></g><g><title>[unknown] (2 samples, 0.50%)</title><rect x="90.9774%" y="533" width="0.5013%" height="15" fill="rgb(252,136,39)" fg:x="363" fg:w="2"/><text x="91.2274%" y="543.50"></text></g><g><title>[unknown] (2 samples, 0.50%)</title><rect x="90.9774%" y="517" width="0.5013%" height="15" fill="rgb(223,213,32)" fg:x="363" fg:w="2"/><text x="91.2274%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="91.2281%" y="501" width="0.2506%" height="15" fill="rgb(233,115,5)" fg:x="364" fg:w="1"/><text x="91.4781%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="91.2281%" y="485" width="0.2506%" height="15" fill="rgb(207,226,44)" fg:x="364" fg:w="1"/><text x="91.4781%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="91.2281%" y="469" width="0.2506%" height="15" fill="rgb(208,126,0)" fg:x="364" fg:w="1"/><text x="91.4781%" y="479.50"></text></g><g><title>__mmap (5 samples, 1.25%)</title><rect x="91.4787%" y="517" width="1.2531%" height="15" fill="rgb(244,66,21)" fg:x="365" fg:w="5"/><text x="91.7287%" y="527.50"></text></g><g><title>[unknown] (5 samples, 1.25%)</title><rect x="91.4787%" y="501" width="1.2531%" height="15" fill="rgb(222,97,12)" fg:x="365" fg:w="5"/><text x="91.7287%" y="511.50"></text></g><g><title>[unknown] (5 samples, 1.25%)</title><rect x="91.4787%" y="485" width="1.2531%" height="15" fill="rgb(219,213,19)" fg:x="365" fg:w="5"/><text x="91.7287%" y="495.50"></text></g><g><title>[unknown] (5 samples, 1.25%)</title><rect x="91.4787%" y="469" width="1.2531%" height="15" fill="rgb(252,169,30)" fg:x="365" fg:w="5"/><text x="91.7287%" y="479.50"></text></g><g><title>[unknown] (4 samples, 1.00%)</title><rect x="91.7293%" y="453" width="1.0025%" height="15" fill="rgb(206,32,51)" fg:x="366" fg:w="4"/><text x="91.9793%" y="463.50"></text></g><g><title>[unknown] (3 samples, 0.75%)</title><rect x="91.9799%" y="437" width="0.7519%" height="15" fill="rgb(250,172,42)" fg:x="367" fg:w="3"/><text x="92.2299%" y="447.50"></text></g><g><title>__mprotect (2 samples, 0.50%)</title><rect x="92.7318%" y="517" width="0.5013%" height="15" fill="rgb(209,34,43)" fg:x="370" fg:w="2"/><text x="92.9818%" y="527.50"></text></g><g><title>[unknown] (2 samples, 0.50%)</title><rect x="92.7318%" y="501" width="0.5013%" height="15" fill="rgb(223,11,35)" fg:x="370" fg:w="2"/><text x="92.9818%" y="511.50"></text></g><g><title>[unknown] (2 samples, 0.50%)</title><rect x="92.7318%" y="485" width="0.5013%" height="15" fill="rgb(251,219,26)" fg:x="370" fg:w="2"/><text x="92.9818%" y="495.50"></text></g><g><title>[unknown] (2 samples, 0.50%)</title><rect x="92.7318%" y="469" width="0.5013%" height="15" fill="rgb(231,119,3)" fg:x="370" fg:w="2"/><text x="92.9818%" y="479.50"></text></g><g><title>[unknown] (2 samples, 0.50%)</title><rect x="92.7318%" y="453" width="0.5013%" height="15" fill="rgb(216,97,11)" fg:x="370" fg:w="2"/><text x="92.9818%" y="463.50"></text></g><g><title>[unknown] (2 samples, 0.50%)</title><rect x="92.7318%" y="437" width="0.5013%" height="15" fill="rgb(223,59,9)" fg:x="370" fg:w="2"/><text x="92.9818%" y="447.50"></text></g><g><title>[unknown] (2 samples, 0.50%)</title><rect x="92.7318%" y="421" width="0.5013%" height="15" fill="rgb(233,93,31)" fg:x="370" fg:w="2"/><text x="92.9818%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="92.9825%" y="405" width="0.2506%" height="15" fill="rgb(239,81,33)" fg:x="371" fg:w="1"/><text x="93.2325%" y="415.50"></text></g><g><title>sigaltstack (1 samples, 0.25%)</title><rect x="93.2331%" y="517" width="0.2506%" height="15" fill="rgb(213,120,34)" fg:x="372" fg:w="1"/><text x="93.4831%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="93.2331%" y="501" width="0.2506%" height="15" fill="rgb(243,49,53)" fg:x="372" fg:w="1"/><text x="93.4831%" y="511.50"></text></g><g><title>[libc.so.6] (197 samples, 49.37%)</title><rect x="44.8622%" y="613" width="49.3734%" height="15" fill="rgb(247,216,33)" fg:x="179" fg:w="197"/><text x="45.1122%" y="623.50">[libc.so.6]</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (189 samples, 47.37%)</title><rect x="46.8672%" y="597" width="47.3684%" height="15" fill="rgb(226,26,14)" fg:x="187" fg:w="189"/><text x="47.1172%" y="607.50">std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>std::sys::unix::stack_overflow::Handler::new (13 samples, 3.26%)</title><rect x="90.9774%" y="581" width="3.2581%" height="15" fill="rgb(215,49,53)" fg:x="363" fg:w="13"/><text x="91.2274%" y="591.50">std..</text></g><g><title>std::sys::unix::stack_overflow::imp::make_handler (13 samples, 3.26%)</title><rect x="90.9774%" y="565" width="3.2581%" height="15" fill="rgb(245,162,40)" fg:x="363" fg:w="13"/><text x="91.2274%" y="575.50">std..</text></g><g><title>std::sys::unix::stack_overflow::imp::get_stack (11 samples, 2.76%)</title><rect x="91.4787%" y="549" width="2.7569%" height="15" fill="rgb(229,68,17)" fg:x="365" fg:w="11"/><text x="91.7287%" y="559.50">st..</text></g><g><title>std::sys::unix::stack_overflow::imp::get_stackp (11 samples, 2.76%)</title><rect x="91.4787%" y="533" width="2.7569%" height="15" fill="rgb(213,182,10)" fg:x="365" fg:w="11"/><text x="91.7287%" y="543.50">st..</text></g><g><title>std::sys::unix::os::page_size (3 samples, 0.75%)</title><rect x="93.4837%" y="517" width="0.7519%" height="15" fill="rgb(245,125,30)" fg:x="373" fg:w="3"/><text x="93.7337%" y="527.50"></text></g><g><title>__sysconf (3 samples, 0.75%)</title><rect x="93.4837%" y="501" width="0.7519%" height="15" fill="rgb(232,202,2)" fg:x="373" fg:w="3"/><text x="93.7337%" y="511.50"></text></g><g><title>[libc.so.6] (199 samples, 49.87%)</title><rect x="44.8622%" y="629" width="49.8747%" height="15" fill="rgb(237,140,51)" fg:x="179" fg:w="199"/><text x="45.1122%" y="639.50">[libc.so.6]</text></g><g><title>[unknown] (2 samples, 0.50%)</title><rect x="94.2356%" y="613" width="0.5013%" height="15" fill="rgb(236,157,25)" fg:x="376" fg:w="2"/><text x="94.4856%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="94.4862%" y="597" width="0.2506%" height="15" fill="rgb(219,209,0)" fg:x="377" fg:w="1"/><text x="94.7362%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="94.4862%" y="581" width="0.2506%" height="15" fill="rgb(240,116,54)" fg:x="377" fg:w="1"/><text x="94.7362%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="94.4862%" y="565" width="0.2506%" height="15" fill="rgb(216,10,36)" fg:x="377" fg:w="1"/><text x="94.7362%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="94.4862%" y="549" width="0.2506%" height="15" fill="rgb(222,72,44)" fg:x="377" fg:w="1"/><text x="94.7362%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="94.4862%" y="533" width="0.2506%" height="15" fill="rgb(232,159,9)" fg:x="377" fg:w="1"/><text x="94.7362%" y="543.50"></text></g><g><title>&lt;console_subscriber::ConsoleLayer as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_enter (1 samples, 0.25%)</title><rect x="95.4887%" y="533" width="0.2506%" height="15" fill="rgb(210,39,32)" fg:x="381" fg:w="1"/><text x="95.7387%" y="543.50"></text></g><g><title>&lt;console_subscriber::ConsoleLayer as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_enter::update (1 samples, 0.25%)</title><rect x="95.4887%" y="517" width="0.2506%" height="15" fill="rgb(216,194,45)" fg:x="381" fg:w="1"/><text x="95.7387%" y="527.50"></text></g><g><title>console_subscriber::stats::AsyncOpStats::start_poll (1 samples, 0.25%)</title><rect x="95.4887%" y="501" width="0.2506%" height="15" fill="rgb(218,18,35)" fg:x="381" fg:w="1"/><text x="95.7387%" y="511.50"></text></g><g><title>std::time::Instant::checked_duration_since (1 samples, 0.25%)</title><rect x="95.4887%" y="485" width="0.2506%" height="15" fill="rgb(207,83,51)" fg:x="381" fg:w="1"/><text x="95.7387%" y="495.50"></text></g><g><title>std::sys::unix::time::inner::Instant::checked_sub_instant (1 samples, 0.25%)</title><rect x="95.4887%" y="469" width="0.2506%" height="15" fill="rgb(225,63,43)" fg:x="381" fg:w="1"/><text x="95.7387%" y="479.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (1 samples, 0.25%)</title><rect x="95.4887%" y="453" width="0.2506%" height="15" fill="rgb(207,57,36)" fg:x="381" fg:w="1"/><text x="95.7387%" y="463.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::enter (1 samples, 0.25%)</title><rect x="95.7393%" y="533" width="0.2506%" height="15" fill="rgb(216,99,33)" fg:x="382" fg:w="1"/><text x="95.9893%" y="543.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::enter (3 samples, 0.75%)</title><rect x="95.4887%" y="549" width="0.7519%" height="15" fill="rgb(225,42,16)" fg:x="381" fg:w="3"/><text x="95.7387%" y="559.50"></text></g><g><title>tracing_subscriber::layer::context::Context&lt;S&gt;::if_enabled_for (1 samples, 0.25%)</title><rect x="95.9900%" y="533" width="0.2506%" height="15" fill="rgb(220,201,45)" fg:x="383" fg:w="1"/><text x="96.2400%" y="543.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_subscriber::registry::LookupSpan&gt;::span_data (1 samples, 0.25%)</title><rect x="95.9900%" y="517" width="0.2506%" height="15" fill="rgb(225,33,4)" fg:x="383" fg:w="1"/><text x="96.2400%" y="527.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::enter (1 samples, 0.25%)</title><rect x="96.2406%" y="517" width="0.2506%" height="15" fill="rgb(224,33,50)" fg:x="384" fg:w="1"/><text x="96.4906%" y="527.50"></text></g><g><title>&lt;console_subscriber::ConsoleLayer as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_enter (1 samples, 0.25%)</title><rect x="96.2406%" y="501" width="0.2506%" height="15" fill="rgb(246,198,51)" fg:x="384" fg:w="1"/><text x="96.4906%" y="511.50"></text></g><g><title>&lt;console_subscriber::ConsoleLayer as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_enter::update (1 samples, 0.25%)</title><rect x="96.2406%" y="485" width="0.2506%" height="15" fill="rgb(205,22,4)" fg:x="384" fg:w="1"/><text x="96.4906%" y="495.50"></text></g><g><title>tokio::time::interval::Interval::poll_tick (2 samples, 0.50%)</title><rect x="96.2406%" y="549" width="0.5013%" height="15" fill="rgb(206,3,8)" fg:x="384" fg:w="2"/><text x="96.4906%" y="559.50"></text></g><g><title>&lt;tokio::time::sleep::Sleep as core::future::future::Future&gt;::poll (2 samples, 0.50%)</title><rect x="96.2406%" y="533" width="0.5013%" height="15" fill="rgb(251,23,15)" fg:x="384" fg:w="2"/><text x="96.4906%" y="543.50"></text></g><g><title>tracing_core::event::Event::dispatch (1 samples, 0.25%)</title><rect x="96.4912%" y="517" width="0.2506%" height="15" fill="rgb(252,88,28)" fg:x="385" fg:w="1"/><text x="96.7412%" y="527.50"></text></g><g><title>tracing_core::dispatcher::get_default (1 samples, 0.25%)</title><rect x="96.4912%" y="501" width="0.2506%" height="15" fill="rgb(212,127,14)" fg:x="385" fg:w="1"/><text x="96.7412%" y="511.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::event (1 samples, 0.25%)</title><rect x="96.4912%" y="485" width="0.2506%" height="15" fill="rgb(247,145,37)" fg:x="385" fg:w="1"/><text x="96.7412%" y="495.50"></text></g><g><title>&lt;console_subscriber::ConsoleLayer as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_event (1 samples, 0.25%)</title><rect x="96.4912%" y="469" width="0.2506%" height="15" fill="rgb(209,117,53)" fg:x="385" fg:w="1"/><text x="96.7412%" y="479.50"></text></g><g><title>tokio::sync::mpsc::bounded::Permit&lt;T&gt;::send (1 samples, 0.25%)</title><rect x="96.4912%" y="453" width="0.2506%" height="15" fill="rgb(212,90,42)" fg:x="385" fg:w="1"/><text x="96.7412%" y="463.50"></text></g><g><title>tokio::sync::mpsc::list::Tx&lt;T&gt;::push (1 samples, 0.25%)</title><rect x="96.4912%" y="437" width="0.2506%" height="15" fill="rgb(218,164,37)" fg:x="385" fg:w="1"/><text x="96.7412%" y="447.50"></text></g><g><title>&lt;tokio::util::trace::InstrumentedAsyncOp&lt;F&gt; as core::future::future::Future&gt;::poll (6 samples, 1.50%)</title><rect x="95.4887%" y="565" width="1.5038%" height="15" fill="rgb(246,65,34)" fg:x="381" fg:w="6"/><text x="95.7387%" y="575.50"></text></g><g><title>tracing_core::event::Event::dispatch (1 samples, 0.25%)</title><rect x="96.7419%" y="549" width="0.2506%" height="15" fill="rgb(231,100,33)" fg:x="386" fg:w="1"/><text x="96.9919%" y="559.50"></text></g><g><title>tracing_core::dispatcher::get_default (1 samples, 0.25%)</title><rect x="96.7419%" y="533" width="0.2506%" height="15" fill="rgb(228,126,14)" fg:x="386" fg:w="1"/><text x="96.9919%" y="543.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::event (1 samples, 0.25%)</title><rect x="96.7419%" y="517" width="0.2506%" height="15" fill="rgb(215,173,21)" fg:x="386" fg:w="1"/><text x="96.9919%" y="527.50"></text></g><g><title>&lt;console_subscriber::ConsoleLayer as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_event (1 samples, 0.25%)</title><rect x="96.7419%" y="501" width="0.2506%" height="15" fill="rgb(210,6,40)" fg:x="386" fg:w="1"/><text x="96.9919%" y="511.50"></text></g><g><title>console_subscriber::ConsoleLayer::is_id_resource (1 samples, 0.25%)</title><rect x="96.7419%" y="485" width="0.2506%" height="15" fill="rgb(212,48,18)" fg:x="386" fg:w="1"/><text x="96.9919%" y="495.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::exit (1 samples, 0.25%)</title><rect x="96.9925%" y="533" width="0.2506%" height="15" fill="rgb(230,214,11)" fg:x="387" fg:w="1"/><text x="97.2425%" y="543.50"></text></g><g><title>tracing_subscriber::layer::context::Context&lt;S&gt;::if_enabled_for (1 samples, 0.25%)</title><rect x="96.9925%" y="517" width="0.2506%" height="15" fill="rgb(254,105,39)" fg:x="387" fg:w="1"/><text x="97.2425%" y="527.50"></text></g><g><title>&lt;tokio::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (8 samples, 2.01%)</title><rect x="95.4887%" y="597" width="2.0050%" height="15" fill="rgb(245,158,5)" fg:x="381" fg:w="8"/><text x="95.7387%" y="607.50">&lt;..</text></g><g><title>tokio::time::interval::Interval::tick::{{closure}} (8 samples, 2.01%)</title><rect x="95.4887%" y="581" width="2.0050%" height="15" fill="rgb(249,208,11)" fg:x="381" fg:w="8"/><text x="95.7387%" y="591.50">t..</text></g><g><title>tokio::util::trace::async_op (2 samples, 0.50%)</title><rect x="96.9925%" y="565" width="0.5013%" height="15" fill="rgb(210,39,28)" fg:x="387" fg:w="2"/><text x="97.2425%" y="575.50"></text></g><g><title>tracing::span::Span::in_scope (2 samples, 0.50%)</title><rect x="96.9925%" y="549" width="0.5013%" height="15" fill="rgb(211,56,53)" fg:x="387" fg:w="2"/><text x="97.2425%" y="559.50"></text></g><g><title>tracing::span::Span::new (1 samples, 0.25%)</title><rect x="97.2431%" y="533" width="0.2506%" height="15" fill="rgb(226,201,30)" fg:x="388" fg:w="1"/><text x="97.4931%" y="543.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (1 samples, 0.25%)</title><rect x="97.2431%" y="517" width="0.2506%" height="15" fill="rgb(239,101,34)" fg:x="388" fg:w="1"/><text x="97.4931%" y="527.50"></text></g><g><title>&lt;console_subscriber::ConsoleLayer as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_new_span (1 samples, 0.25%)</title><rect x="97.2431%" y="501" width="0.2506%" height="15" fill="rgb(226,209,5)" fg:x="388" fg:w="1"/><text x="97.4931%" y="511.50"></text></g><g><title>[libc.so.6] (1 samples, 0.25%)</title><rect x="97.2431%" y="485" width="0.2506%" height="15" fill="rgb(250,105,47)" fg:x="388" fg:w="1"/><text x="97.4931%" y="495.50"></text></g><g><title>&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (9 samples, 2.26%)</title><rect x="95.4887%" y="613" width="2.2556%" height="15" fill="rgb(230,72,3)" fg:x="381" fg:w="9"/><text x="95.7387%" y="623.50">&lt;..</text></g><g><title>tokio::task::spawn::spawn (1 samples, 0.25%)</title><rect x="97.4937%" y="597" width="0.2506%" height="15" fill="rgb(232,218,39)" fg:x="389" fg:w="1"/><text x="97.7437%" y="607.50"></text></g><g><title>tracing::span::Span::new (1 samples, 0.25%)</title><rect x="97.4937%" y="581" width="0.2506%" height="15" fill="rgb(248,166,6)" fg:x="389" fg:w="1"/><text x="97.7437%" y="591.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (1 samples, 0.25%)</title><rect x="97.4937%" y="565" width="0.2506%" height="15" fill="rgb(247,89,20)" fg:x="389" fg:w="1"/><text x="97.7437%" y="575.50"></text></g><g><title>&lt;console_subscriber::ConsoleLayer as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_new_span (1 samples, 0.25%)</title><rect x="97.4937%" y="549" width="0.2506%" height="15" fill="rgb(248,130,54)" fg:x="389" fg:w="1"/><text x="97.7437%" y="559.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.25%)</title><rect x="97.4937%" y="533" width="0.2506%" height="15" fill="rgb(234,196,4)" fg:x="389" fg:w="1"/><text x="97.7437%" y="543.50"></text></g><g><title>clock_gettime (1 samples, 0.25%)</title><rect x="97.4937%" y="517" width="0.2506%" height="15" fill="rgb(250,143,31)" fg:x="389" fg:w="1"/><text x="97.7437%" y="527.50"></text></g><g><title>__vdso_clock_gettime (1 samples, 0.25%)</title><rect x="97.4937%" y="501" width="0.2506%" height="15" fill="rgb(211,110,34)" fg:x="389" fg:w="1"/><text x="97.7437%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="97.4937%" y="485" width="0.2506%" height="15" fill="rgb(215,124,48)" fg:x="389" fg:w="1"/><text x="97.7437%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="97.4937%" y="469" width="0.2506%" height="15" fill="rgb(216,46,13)" fg:x="389" fg:w="1"/><text x="97.7437%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="97.4937%" y="453" width="0.2506%" height="15" fill="rgb(205,184,25)" fg:x="389" fg:w="1"/><text x="97.7437%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="97.4937%" y="437" width="0.2506%" height="15" fill="rgb(228,1,10)" fg:x="389" fg:w="1"/><text x="97.7437%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="97.4937%" y="421" width="0.2506%" height="15" fill="rgb(213,116,27)" fg:x="389" fg:w="1"/><text x="97.7437%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="97.4937%" y="405" width="0.2506%" height="15" fill="rgb(241,95,50)" fg:x="389" fg:w="1"/><text x="97.7437%" y="415.50"></text></g><g><title>[unknown] (6 samples, 1.50%)</title><rect x="97.7444%" y="613" width="1.5038%" height="15" fill="rgb(238,48,32)" fg:x="390" fg:w="6"/><text x="97.9944%" y="623.50"></text></g><g><title>[unknown] (5 samples, 1.25%)</title><rect x="97.9950%" y="597" width="1.2531%" height="15" fill="rgb(235,113,49)" fg:x="391" fg:w="5"/><text x="98.2450%" y="607.50"></text></g><g><title>[unknown] (3 samples, 0.75%)</title><rect x="98.4962%" y="581" width="0.7519%" height="15" fill="rgb(205,127,43)" fg:x="393" fg:w="3"/><text x="98.7462%" y="591.50"></text></g><g><title>[unknown] (2 samples, 0.50%)</title><rect x="98.7469%" y="565" width="0.5013%" height="15" fill="rgb(250,162,2)" fg:x="394" fg:w="2"/><text x="98.9969%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="98.9975%" y="549" width="0.2506%" height="15" fill="rgb(220,13,41)" fg:x="395" fg:w="1"/><text x="99.2475%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="98.9975%" y="533" width="0.2506%" height="15" fill="rgb(249,221,25)" fg:x="395" fg:w="1"/><text x="99.2475%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="98.9975%" y="517" width="0.2506%" height="15" fill="rgb(215,208,19)" fg:x="395" fg:w="1"/><text x="99.2475%" y="527.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task (1 samples, 0.25%)</title><rect x="99.2481%" y="613" width="0.2506%" height="15" fill="rgb(236,175,2)" fg:x="396" fg:w="1"/><text x="99.4981%" y="623.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (1 samples, 0.25%)</title><rect x="99.2481%" y="597" width="0.2506%" height="15" fill="rgb(241,52,2)" fg:x="396" fg:w="1"/><text x="99.4981%" y="607.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (1 samples, 0.25%)</title><rect x="99.2481%" y="581" width="0.2506%" height="15" fill="rgb(248,140,14)" fg:x="396" fg:w="1"/><text x="99.4981%" y="591.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (1 samples, 0.25%)</title><rect x="99.2481%" y="565" width="0.2506%" height="15" fill="rgb(253,22,42)" fg:x="396" fg:w="1"/><text x="99.4981%" y="575.50"></text></g><g><title>&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.25%)</title><rect x="99.2481%" y="549" width="0.2506%" height="15" fill="rgb(234,61,47)" fg:x="396" fg:w="1"/><text x="99.4981%" y="559.50"></text></g><g><title>bittorrent_rust::tracker::tracker::Tracker::run::{{closure}}::{{closure}} (1 samples, 0.25%)</title><rect x="99.2481%" y="533" width="0.2506%" height="15" fill="rgb(208,226,15)" fg:x="396" fg:w="1"/><text x="99.4981%" y="543.50"></text></g><g><title>&lt;tokio::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (1 samples, 0.25%)</title><rect x="99.2481%" y="517" width="0.2506%" height="15" fill="rgb(217,221,4)" fg:x="396" fg:w="1"/><text x="99.4981%" y="527.50"></text></g><g><title>tokio::time::interval::Interval::tick::{{closure}} (1 samples, 0.25%)</title><rect x="99.2481%" y="501" width="0.2506%" height="15" fill="rgb(212,174,34)" fg:x="396" fg:w="1"/><text x="99.4981%" y="511.50"></text></g><g><title>&lt;tokio::util::trace::InstrumentedAsyncOp&lt;F&gt; as core::future::future::Future&gt;::poll (1 samples, 0.25%)</title><rect x="99.2481%" y="485" width="0.2506%" height="15" fill="rgb(253,83,4)" fg:x="396" fg:w="1"/><text x="99.4981%" y="495.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::enter (1 samples, 0.25%)</title><rect x="99.2481%" y="469" width="0.2506%" height="15" fill="rgb(250,195,49)" fg:x="396" fg:w="1"/><text x="99.4981%" y="479.50"></text></g><g><title>&lt;console_subscriber::ConsoleLayer as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_enter (1 samples, 0.25%)</title><rect x="99.2481%" y="453" width="0.2506%" height="15" fill="rgb(241,192,25)" fg:x="396" fg:w="1"/><text x="99.4981%" y="463.50"></text></g><g><title>&lt;console_subscriber::ConsoleLayer as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_enter::update (1 samples, 0.25%)</title><rect x="99.2481%" y="437" width="0.2506%" height="15" fill="rgb(208,124,10)" fg:x="396" fg:w="1"/><text x="99.4981%" y="447.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (1 samples, 0.25%)</title><rect x="99.4987%" y="597" width="0.2506%" height="15" fill="rgb(222,33,0)" fg:x="397" fg:w="1"/><text x="99.7487%" y="607.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (1 samples, 0.25%)</title><rect x="99.4987%" y="581" width="0.2506%" height="15" fill="rgb(234,209,28)" fg:x="397" fg:w="1"/><text x="99.7487%" y="591.50"></text></g><g><title>&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.25%)</title><rect x="99.4987%" y="565" width="0.2506%" height="15" fill="rgb(224,11,23)" fg:x="397" fg:w="1"/><text x="99.7487%" y="575.50"></text></g><g><title>bittorrent_rust::tracker::tracker::Tracker::run::{{closure}}::{{closure}} (1 samples, 0.25%)</title><rect x="99.4987%" y="549" width="0.2506%" height="15" fill="rgb(232,99,1)" fg:x="397" fg:w="1"/><text x="99.7487%" y="559.50"></text></g><g><title>&lt;tokio::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (1 samples, 0.25%)</title><rect x="99.4987%" y="533" width="0.2506%" height="15" fill="rgb(237,95,45)" fg:x="397" fg:w="1"/><text x="99.7487%" y="543.50"></text></g><g><title>tokio::time::interval::Interval::tick::{{closure}} (1 samples, 0.25%)</title><rect x="99.4987%" y="517" width="0.2506%" height="15" fill="rgb(208,109,11)" fg:x="397" fg:w="1"/><text x="99.7487%" y="527.50"></text></g><g><title>&lt;tokio::util::trace::InstrumentedAsyncOp&lt;F&gt; as core::future::future::Future&gt;::poll (1 samples, 0.25%)</title><rect x="99.4987%" y="501" width="0.2506%" height="15" fill="rgb(216,190,48)" fg:x="397" fg:w="1"/><text x="99.7487%" y="511.50"></text></g><g><title>tokio::time::interval::Interval::poll_tick (1 samples, 0.25%)</title><rect x="99.4987%" y="485" width="0.2506%" height="15" fill="rgb(251,171,36)" fg:x="397" fg:w="1"/><text x="99.7487%" y="495.50"></text></g><g><title>&lt;tokio::time::sleep::Sleep as core::future::future::Future&gt;::poll (1 samples, 0.25%)</title><rect x="99.4987%" y="469" width="0.2506%" height="15" fill="rgb(230,62,22)" fg:x="397" fg:w="1"/><text x="99.7487%" y="479.50"></text></g><g><title>tracing_core::event::Event::dispatch (1 samples, 0.25%)</title><rect x="99.4987%" y="453" width="0.2506%" height="15" fill="rgb(225,114,35)" fg:x="397" fg:w="1"/><text x="99.7487%" y="463.50"></text></g><g><title>tracing_core::dispatcher::get_default (1 samples, 0.25%)</title><rect x="99.4987%" y="437" width="0.2506%" height="15" fill="rgb(215,118,42)" fg:x="397" fg:w="1"/><text x="99.7487%" y="447.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::event (1 samples, 0.25%)</title><rect x="99.4987%" y="421" width="0.2506%" height="15" fill="rgb(243,119,21)" fg:x="397" fg:w="1"/><text x="99.7487%" y="431.50"></text></g><g><title>&lt;console_subscriber::ConsoleLayer as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_event (1 samples, 0.25%)</title><rect x="99.4987%" y="405" width="0.2506%" height="15" fill="rgb(252,177,53)" fg:x="397" fg:w="1"/><text x="99.7487%" y="415.50"></text></g><g><title>tokio::sync::mpsc::bounded::Permit&lt;T&gt;::send (1 samples, 0.25%)</title><rect x="99.4987%" y="389" width="0.2506%" height="15" fill="rgb(237,209,29)" fg:x="397" fg:w="1"/><text x="99.7487%" y="399.50"></text></g><g><title>[libc.so.6] (1 samples, 0.25%)</title><rect x="99.4987%" y="373" width="0.2506%" height="15" fill="rgb(212,65,23)" fg:x="397" fg:w="1"/><text x="99.7487%" y="383.50"></text></g><g><title>all (399 samples, 100%)</title><rect x="0.0000%" y="661" width="100.0000%" height="15" fill="rgb(230,222,46)" fg:x="0" fg:w="399"/><text x="0.2500%" y="671.50"></text></g><g><title>tokio-runtime-w (221 samples, 55.39%)</title><rect x="44.6115%" y="645" width="55.3885%" height="15" fill="rgb(215,135,32)" fg:x="178" fg:w="221"/><text x="44.8615%" y="655.50">tokio-runtime-w</text></g><g><title>[unknown] (21 samples, 5.26%)</title><rect x="94.7368%" y="629" width="5.2632%" height="15" fill="rgb(246,101,22)" fg:x="378" fg:w="21"/><text x="94.9868%" y="639.50">[unkno..</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (2 samples, 0.50%)</title><rect x="99.4987%" y="613" width="0.5013%" height="15" fill="rgb(206,107,13)" fg:x="397" fg:w="2"/><text x="99.7487%" y="623.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_running (1 samples, 0.25%)</title><rect x="99.7494%" y="597" width="0.2506%" height="15" fill="rgb(250,100,44)" fg:x="398" fg:w="1"/><text x="99.9994%" y="607.50"></text></g></svg></svg>